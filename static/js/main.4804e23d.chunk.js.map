{"version":3,"sources":["helpers/remote.js","helpers/loading.js","helpers/util.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/modal/index.js","components/header/add.js","components/header/tag-filter.js","components/header/index.js","components/sidebar.js","components/form/label-group/index.js","components/form/dates/index.js","components/right-bar/form.js","components/right-bar/index.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js"],"names":["token","pushRequest","store","pushLoading","popRequest","popLoading","REPO_URL","localStorage","getItem","API_ROOT","REPO_ROOT","goToIssue","number","window","open","getHeaders","headers","Accept","Authorization","$request","endpoint","payload","a","async","getData","hideLoading","loadingText","throwException","method","headerLink","requestUrl","indexOf","Object","keys","forEach","key","index","value","undefined","axios","put","response","delete","post","patch","get","data","link","message","error","String","$get","options","$post","$patch","isLogin","decideFontColor","background","parseInt","substr","metaRegexp","parseMeta","body","match","exec","result","meta","JSON","parse","defer","e","fetchIssues","page","direction","_","Date","getTime","issues","map","issue","pageFinder","includes","status","removeItem","location","reload","addIssue","title","addLabel","names","issueNumber","labels","Array","isArray","deleteLabel","name","$delete","updateIssueLabels","$put","label","updateIssue","updateIssueMeta","newBody","_meta","clone","moment","format","stringify","test","replace","stringifyMeta","debounce","_updateIssue","isListLabel","description","this","filter","o","$visible","$displayLabels","$isImportant","some","$selected","selectedIssueNumber","$deferred","isAfter","computedIssues","length","find","observable","computed","action","initState","loading","sidebarCollapsed","rightBarCollapsed","id","state","$closed","fakeNumber","push","important","visible","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","exact","node","type","Modal","changing","prevProps","setTimeout","setState","okText","onOk","onCancel","okButtonProps","createPortal","className","data-is-hide","onClick","document","nextProps","prevState","defaultProps","HeaderAdd","observer","modalVisible","handleInputChange","submit","context","input","placeholder","autoFocus","ref","onPressEnter","contextTypes","TagFilter","setVisible","updateLabelVisible","trigger","placement","content","renderContent","style","backgroundColor","color","Header","toggleSidebar","setSidebarCollapse","toggleRightBar","setRightBarCollapse","goToGithub","init","data-is-loading","menu","disabled","Sidebar","href","data-is-collapsed","to","logout","CheckableTag","LabelGroup","React","forwardRef","dataSource","onChange","handleLabelChange","useCallback","checked","newValue","Dates","createdAt","updatedAt","handleDeferChange","handleAddDay","add","handleAddMonth","handleAddWeek","Item","showTime","secondStep","defaultValue","showToday","width","labelAlign","labelCol","span","wrapperCol","create","mapPropsToFields","formData","createFormField","date","onValuesChange","changedValues","allValues","form","displayLabels","getFieldDecorator","TextArea","rows","RightBar","selectedIssue","handleValuesChange","created_at","updated_at","Login","repo","onTokenChange","target","onRepoChange","login","setItem","Issue","handleCheckBoxClick","closeIssue","toggleFlag","setIssueFlag","select","setSelectedIssueNumber","data-is-selected","data-is-faded","data-is-important","data-is-closed","theme","IssueList","clearSelection","InboxPage","inboxIssues","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","size","component","Inbox","NextAction","Important","List","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4804e23d.chunk.js","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const REPO_URL = localStorage.getItem('issue-todo-repo');\nexport const API_ROOT = REPO_URL && `https://api.github.com/repos${REPO_URL}`;\nexport const REPO_ROOT = REPO_URL && `https://github.com${REPO_URL}/issues`;\n\nexport const goToIssue = number => window.open(`${REPO_ROOT}/${number}`);\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('issue-todo-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET',\n        headerLink = false,\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        if (headerLink) {\n            return [response.data, response.headers.link];\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('issue-todo-token');\n    }\n    return !!token;\n};\n","import store from '../store';\n\nexport const pushRequest = () => {\n    store.pushLoading();\n};\n\nexport const popRequest = () => {\n    store.popLoading();\n};","import moment from 'moment';\nimport _ from 'lodash';\n\nexport const decideFontColor = background => {\n    const red = parseInt(background.substr(0, 2), 16);\n    const green = parseInt(background.substr(2, 2), 16);\n    const blue = parseInt(background.substr(4, 2), 16);\n    if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {\n        return '#000000';\n    }\n    return '#ffffff';\n};\n\nconst metaRegexp = /^```\\r\\n\\[meta\\]([\\s\\S]*)\\[\\/meta\\]\\r\\n```/;\nexport const parseMeta = body => {\n    if (!body) {\n        return {};\n    }\n    const match = metaRegexp.exec(body);\n    const result = {};\n    if (match) {\n        try {\n            const meta = JSON.parse(match[1]);\n            if (meta.defer) {\n                result.defer = meta.defer;\n            }\n        } catch (e) { }\n    }\n    return result;\n}\nexport const stringifyMeta = (body, _meta) => {\n    const meta = _.clone(_meta);\n    if (meta.defer) {\n        meta.defer = moment(meta.defer).format('YYYY-MM-DD HH:mm:ss');\n    }\n    const result = `\\`\\`\\`\\r\\n[meta]\\r\\n${JSON.stringify(meta, null, 2)}\\r\\n[/meta]\\r\\n\\`\\`\\``;\n    if (metaRegexp.test(body)) {\n        return body.replace(metaRegexp, result);\n    } else {\n        return result + '\\r\\n' + (body || '');\n    }\n}\n","import { $get, $patch, $post, $delete, $put } from './remote';\nimport { parseMeta, stringifyMeta } from './util';\n\nexport const fetchIssues = async () => {\n    try {\n        let result = [];\n        let page = 1;\n        while (true) {\n            const [issues, link] = await $get(\n                `/issues`,\n                { direction: 'asc', _: new Date().getTime(), page },\n                { throwException: true, headerLink: true }\n            );\n            result = [\n                ...result,\n                ...issues.map(issue => ({\n                    ...issue,\n                    meta: parseMeta(issue.body),\n                })),\n            ];\n            const pageFinder = /&page=(\\d)>;\\srel=\"next\"/.exec(link);\n            if (pageFinder) {\n                page = pageFinder[1];\n            } else {\n                break;\n            }\n        }\n        return result;\n    } catch (e) {\n        if (e.response && [401, 404].includes(e.response.status)) {\n            localStorage.removeItem('issue-todo-token');\n            localStorage.removeItem('issue-todo-repo');\n            window.location.reload();\n        } else {\n            throw e;\n        }\n    }\n};\n\nexport const fetchLabels = () => $get(`/labels`, { _: new Date().getTime() });\n\nexport const closeIssue = async (id) => $patch(`/issues/${id}`, { state: 'close' });\n\nexport const addIssue = ({ title }) => $post('/issues', { title });\n\nexport const addLabel = (names, issueNumber) => $post(\n    `/issues/${issueNumber}/labels`,\n    { labels: Array.isArray(names) ? names : [names] }\n);\n\nexport const deleteLabel = (name, issueNumber) => $delete(`/issues/${issueNumber}/labels/${name}`);\n\nexport const updateIssueLabels = (number, labels) => $put(\n    `/issues/${number}/labels`,\n    {\n        labels: labels.map(label => label.name),\n    }\n);\n\nexport const updateIssue = (number, data) => $patch(\n    `/issues/${number}`,\n    data,\n);\n\nexport const updateIssueMeta = (number, body, { defer }) => {\n    const meta = parseMeta(body);\n    if (defer !== undefined) {\n        meta.defer = defer;\n    }\n    const newBody = stringifyMeta(body, meta);\n    return updateIssue(number, { body: newBody });\n};\n","import {observable, action, computed} from 'mobx';\nimport { message } from 'antd';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport {\n    fetchIssues, fetchLabels, closeIssue, addIssue, addLabel, deleteLabel,\n    updateIssueLabels, updateIssue as _updateIssue, updateIssueMeta,\n} from '../helpers/github';\n\nconst updateIssue = _.debounce(_updateIssue, 1000);\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n    @observable rightBarCollapsed = false;\n    @observable selectedIssueNumber = 0;\n    @observable loading = false;\n\n    @computed get displayLabels() {\n        return this.labels.filter(o => o.name !== 'important');\n    }\n\n    @computed get computedIssues() {\n        const labels = this.labels.filter(label => label.$visible).map(label => label.name);\n        return this.issues.map(issue => {\n            return {\n                ...issue,\n                $displayLabels: issue.labels.filter(o => o.name !== 'important'),\n                $isImportant: issue.labels.some(o => o.name === 'important'),\n                $selected: issue.number === this.selectedIssueNumber,\n                $deferred: issue.meta.defer && moment(issue.meta.defer).isAfter(moment()),\n            };\n        }).filter(issue => {\n            if (issue.$isImportant) {\n                return true;\n            }\n            return issue.labels.some(o => labels.includes(o.name));\n        });\n    }\n    \n    @computed get nextActionIssues() {\n        return this.computedIssues.filter(issue => {\n            if (!issue.$displayLabels.length) {\n                return false;\n            }\n            return !issue.$displayLabels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.computedIssues.filter(issue => issue.$displayLabels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.computedIssues.filter(issue => issue.$isImportant);\n    }\n\n    @computed get listIssues() {\n        return this.computedIssues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n    @computed get selectedIssue() {\n        return this.computedIssues.find(issue => issue.number === this.selectedIssueNumber);\n    }\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels.map(label => ({ ...label, $visible: true }));\n\n        this.initState = 'done';\n    }\n\n    @action pushLoading = () => this.loading++;\n    @action popLoading = () => this.loading--;\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n\n    @action setRightBarCollapse = (value) => {\n        this.rightBarCollapsed = value;\n    }\n\n    @action closeIssue = (number) => {\n        const issue = this.issues.find(o => o.number === number);\n        if (!issue) {\n            return message.error('Issue not found: #' + number);\n        }\n        closeIssue(number);\n        this.issues = this.issues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            return {\n                ...issue,\n                $closed: true,\n            };\n        });\n    }\n\n    @action addIssue = async ({ title }) => {\n        const fakeNumber = new Date().getTime();\n        this.issues.push({\n            number: fakeNumber,\n            title,\n            labels: [],\n            $displayLabels: [],\n        });\n        const issue = await addIssue({ title });\n        this.issues = this.issues.map(o => {\n            if (o.number !== fakeNumber) {\n                return o;\n            }\n            return { ...o, ...issue };\n        });\n    }\n\n    @action setIssueFlag = async (number, important = true) => {\n        const label = this.labels.find(o => o.name === 'important');\n        this.issues = this.computedIssues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            if (important) {\n                if (issue.$isImportant) {\n                    return issue;\n                }\n                addLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: [...issue.labels, label],\n                };\n            } else {\n                if (!issue.$isImportant) {\n                    return issue;\n                }\n                deleteLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: issue.labels.filter(o => o.name !== 'important'),\n                };\n            }\n        });\n    }\n\n    @action setSelectedIssueNumber = number => this.selectedIssueNumber = number;\n\n    @action updateIssue = (number, data) => {\n        this.issues = this.issues.map(issue => {\n            if (issue.number === number) {\n                if (data.meta) {\n                    updateIssueMeta(number, issue.body, data.meta);\n                    return { ...issue, meta: { ...issue.meta, ...data.meta } };\n                }\n                if (data.labels) {\n                    updateIssueLabels(number, data.labels);\n                } else {\n                    updateIssue(number, data);\n                }\n                return { ...issue, ...data };\n            }\n            return issue;\n        });\n    }\n\n    @action updateLabelVisible = (id, visible) => {\n        this.labels = this.labels.map(label => {\n            if (label.id !== id) {\n                return label;\n            }\n            return { ...label, $visible: visible };\n        });\n    }\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/', exact: true, node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport './index.less';\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        okText: 'OK',\n        visible: false,\n        onCancel: () => {},\n        onOk: () => {},\n        okButtonProps: {},\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.changing && !prevState.visible && nextProps.visible) {\n            return {\n                changing: true,\n            };\n        }\n        if (!prevState.changing && prevState.visible && !nextProps.visible) {\n            return {\n                changing: true,\n                visible: false,\n            };\n        }\n        return null;\n    }\n    state = {\n        visible: false,\n        changing: false,\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.visible && this.props.visible) {\n            setTimeout(() => this.setState({ visible: true, changing: false }));\n        } else if (prevProps.visible && !this.props.visible) {\n            setTimeout(() => this.setState({ changing: false }), 280);\n        }\n    }\n    render() {\n        const { okText, onOk, onCancel, okButtonProps } = this.props;\n        const { visible, changing } = this.state;\n        if (!this.props.visible && !changing) {\n            return null;\n        }\n        return createPortal(<aside className=\"ui-modal-cover\">\n            <div className=\"cover\"></div>\n            <div className=\"window\">\n                <div className=\"window-shadow\" data-is-hide={!visible}>\n                    <div className=\"body\">{this.props.children}</div>\n                    <div className=\"footer\">\n                        <div className=\"blank\"></div>\n                        <Button onClick={onCancel}>Cancel</Button>\n                        <Button type=\"primary\" onClick={onOk} {...okButtonProps}>{okText}</Button>\n                    </div>\n                </div>\n            </div>\n        </aside>, document.body);\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Input } from 'antd';\nimport { observer } from 'mobx-react';\nimport Modal from '../modal';\n\n@observer\nclass HeaderAdd extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    state = {\n        modalVisible: false,\n    }\n    handleInputChange = value => {\n        this.setState({ title: value });\n    }\n    submit = () => {\n        const { addIssue } = this.context.store;\n        const title = this.input.input.value;\n        addIssue({ title });\n        this.setState({ modalVisible: false });\n    }\n    render() {\n        const { modalVisible } = this.state;\n        return (\n            <>\n                <button onClick={() => this.setState({ modalVisible: true })}><Icon type=\"inbox\" /></button>\n                <Modal\n                    okText=\"Add\"\n                    visible={modalVisible}\n                    onCancel={() => this.setState({ modalVisible: false })}\n                    onOk={this.submit}\n                >\n                    <Input\n                        placeholder=\"Unnamed Task\"\n                        autoFocus\n                        ref={input => this.input = input}\n                        onPressEnter={this.submit}\n                    />\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default HeaderAdd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport { observer } from 'mobx-react';\nimport { Icon, Popover } from 'antd';\nimport './tag-filter.less';\n\n@observer\nclass TagFilter extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    setVisible = (id, visible) => {\n        const { updateLabelVisible } = this.context.store;\n        updateLabelVisible(id, visible);\n    }\n    render() {\n        return <Popover trigger=\"click\" placement=\"bottomRight\" content={this.renderContent()}>\n            <button><Icon type=\"tags\" /></button>\n        </Popover>\n    }\n    renderContent() {\n        const { labels } = this.context.store;\n        return <div className=\"ui-header-tags-filter\">\n            {labels.filter(label => label.name !== 'important').map(label => <div className=\"popover-item\" key={label.id} onClick={() => this.setVisible(label.id, !label.$visible)}>\n                 <div className=\"check\">{label.$visible && <Icon type=\"check\" />}</div>\n                <div className=\"color\" style={{ backgroundColor: `#${label.color}` }}></div>\n                <div className=\"name\">{label.name}</div>\n            </div>)}\n        </div>\n    }\n}\n\nexport default TagFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../../constants/menus';\nimport { goToIssue } from '../../helpers/remote';\nimport Add from './add';\nimport TagFilter from './tag-filter';\nimport './index.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    toggleRightBar = () => {\n        const { rightBarCollapsed, setRightBarCollapse } = this.context.store;\n        setRightBarCollapse(!rightBarCollapsed);\n    }\n\n    goToGithub = () => {\n        const { selectedIssueNumber } = this.context.store;\n        if (selectedIssueNumber) {\n            goToIssue(selectedIssueNumber);\n        }\n    }\n\n    reload = () => {\n        const { loading, init } = this.context.store;\n        if (!loading) {\n            init();\n        }\n    }\n\n    render() {\n        const { sidebarCollapsed, selectedIssueNumber, loading } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<div className=\"left-buttons\">\n                <button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n                <button onClick={this.reload}><Icon type=\"reload\" data-is-loading={loading > 0} /></button>\n                <Add />\n            </div>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path} exact={menu.exact}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n            <div className=\"right-buttons\">\n                <TagFilter />\n                <button disabled={!selectedIssueNumber} onClick={this.goToGithub}><Icon type=\"github\" /></button>\n                <button onClick={this.toggleRightBar}><Icon type=\"info-circle\" /></button>\n            </div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport { REPO_URL } from '../helpers/remote';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    logout() {\n        localStorage.removeItem('issue-todo-token');\n        localStorage.removeItem('issue-todo-repo');\n        window.location.href = '/';\n    }\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path} exact={menu.exact}>{menu.node}</NavLink>\n                </div>)\n            }\n            <div className=\"login-info\">\n                <p className=\"logout\" onClick={this.logout}>repo:<Icon type=\"logout\" /></p>\n                <p className=\"repo-url\">{REPO_URL}</p>\n            </div>\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { useCallback } from 'react';\nimport { Tag } from 'antd';\nimport { decideFontColor } from '../../../helpers/util';\n\nimport './index.less';\n\nconst { CheckableTag } = Tag;\n\nconst LabelGroup = React.forwardRef(({ dataSource, value, onChange }, ref) => {\n    const handleLabelChange = useCallback((label, checked) => {\n        if (onChange) {\n            let newValue;\n            if (checked) {\n                newValue = [...value, label];\n            } else {\n                newValue = value.filter(o => o.name !== label.name);\n            }\n            onChange(newValue);\n        }\n    }, [onChange, value]);\n\n    return <div className=\"ui-form-item-label-group\" ref={ref}>\n        {\n            dataSource.map(label => <CheckableTag\n                key={label.id}\n                checked={value.some(o => o.name === label.name)}\n                style={{\n                    '--label-font-color': decideFontColor(label.color),\n                    '--label-back-color': `#${label.color}`,\n                }}\n                onChange={checked => handleLabelChange(label, checked)}\n            >\n                {label.name}\n            </CheckableTag>)\n        }\n    </div>\n})\n\nexport default LabelGroup\n","import React, { useCallback } from 'react';\nimport { DatePicker, Form } from 'antd';\nimport moment from 'moment';\n\nimport './index.less';\n\nconst Dates = React.forwardRef(({ value, onChange }, ref) => {\n    const { createdAt, updatedAt, defer } = value;\n    const handleDeferChange = useCallback(value => {\n        onChange({\n            defer: value ? value.format('YYYY-MM-DD HH:mm:ss') : null,\n        });\n    }, [onChange]);\n    const handleAddDay = useCallback(() => {\n        onChange({\n            defer: moment(defer).add(1, 'day').format('YYYY-MM-DD HH:mm:ss'),\n        })\n    }, [onChange, defer]);\n    const handleAddMonth = useCallback(() => {\n        onChange({\n            defer: moment(defer).add(1, 'month').format('YYYY-MM-DD HH:mm:ss'),\n        })\n    }, [onChange, defer]);\n    const handleAddWeek = useCallback(() => {\n        onChange({\n            defer: moment(defer).add(1, 'week').format('YYYY-MM-DD HH:mm:ss'),\n        })\n    }, [onChange, defer]);\n    return <div className=\"ui-form-item-dates\" ref={ref}>\n        <Form.Item label=\"Defer Until\">\n            <DatePicker\n                value={defer ? moment(defer) : null}\n                onChange={handleDeferChange}\n                placeholder=\"\"\n                showTime={{ format: 'HH:mm', secondStep: 60, defaultValue: moment('00:00:00', 'HH:mm:ss') }}\n                format=\"YYYY/MM/DD HH:mm\"\n                showToday={false}\n                style={{ width: '100%' }}\n            />\n            <div className=\"quick-select-buttons\">\n                <button onClick={handleAddDay}>+1 Day</button>\n                <button onClick={handleAddWeek}>+1 Week</button>\n                <button onClick={handleAddMonth}>+1 Month</button>\n            </div>\n        </Form.Item>\n        <div className=\"sub-form\">\n            <Form.Item label=\"Added\" labelAlign=\"left\" labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n                {moment(createdAt).format('YYYY/MM/DD HH:mm')}\n            </Form.Item>\n            <Form.Item label=\"Changed\" labelAlign=\"left\" labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n                {moment(updatedAt).format('YYYY/MM/DD HH:mm')}\n            </Form.Item>\n        </div>\n    </div>\n})\n\nexport default Dates\n","import React from 'react';\nimport { Form, Input } from 'antd';\nimport LabelGroup from '../form/label-group';\nimport Dates from '../form/dates';\n\nfunction RightBarForm({ form, displayLabels }) {\n    const { getFieldDecorator } = form;\n    return <Form>\n        <Form.Item label=\"Title\">\n            {getFieldDecorator('title')(<Input.TextArea rows={4} />)}\n        </Form.Item>\n        <Form.Item label=\"Label\">\n            {getFieldDecorator('labels')(<LabelGroup dataSource={displayLabels} />)}\n        </Form.Item>\n        <Form.Item label=\"Date\">\n            {getFieldDecorator('date')(<Dates />)}\n        </Form.Item>\n    </Form>\n}\n\nexport default Form.create({\n    name: 'right-bar-form',\n    mapPropsToFields({ formData }) {\n        if (!formData) {\n            return {};\n        }\n        return {\n            title: Form.createFormField({ value: formData.title }),\n            labels: Form.createFormField({ value: formData.labels || [] }),\n            date: Form.createFormField({ value: formData.date || {} }),\n        };\n    },\n    onValuesChange(props, changedValues, allValues) {\n        if (props.onValuesChange) {\n            props.onValuesChange(changedValues, allValues);\n        }\n    },\n})(RightBarForm)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Empty } from 'antd';\nimport Form from './form';\nimport './index.less';\n\n@observer\nclass RightBar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    handleLabelChange = (label, checked) => {\n        const { updateIssue, selectedIssue } = this.context.store;\n        let { labels } = selectedIssue;\n        if (checked) {\n            labels = [...labels, label];\n        } else {\n            labels = labels.filter(o => o.name !== label.name);\n        }\n        updateIssue(selectedIssue.number, { labels });\n    }\n\n    handleValuesChange = (changedValues, allValues) => {\n        const { updateIssue, selectedIssue } = this.context.store;\n        if (changedValues.date && changedValues.date.defer !== undefined) {\n            updateIssue(selectedIssue.number, { meta: { defer: changedValues.date.defer } });\n        } else {\n            updateIssue(selectedIssue.number, changedValues);\n        }\n    }\n\n    render() {\n        const { rightBarCollapsed, selectedIssue, displayLabels } = this.context.store;\n        const { labels, title, created_at: createdAt, updated_at: updatedAt, meta } = selectedIssue || {};\n        return <div className=\"app-rightbar\" data-is-collapsed={rightBarCollapsed}>\n            {\n                selectedIssue\n                ? <Form\n                    formData={{ title, labels, date: { createdAt, updatedAt, defer: meta.defer } }}\n                    onValuesChange={this.handleValuesChange}\n                    displayLabels={displayLabels}\n                />\n                : <Empty description=\"NO SELECTION\" />\n            }\n        </div>;\n    }\n}\n\nexport default RightBar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n        repo: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    onRepoChange = e => this.setState({ repo: e.target.value });\n    login = async () => {\n        const { token, repo } = this.state;\n        localStorage.setItem('issue-todo-token', token);\n        localStorage.setItem('issue-todo-repo', /^\\//.test(repo) ? repo : `/${repo}`);\n        window.location.href = '/';\n    }\n    render() {\n        const { token, repo } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"Login\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"GitHub API token\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <Input onChange={this.onRepoChange} value={repo} placeholder=\"Repo address, e.g: wangsijie/todo\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">GO</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport { observer } from 'mobx-react';\nimport { decideFontColor } from '../../helpers/util';\nimport './issue.less';\n\n@observer\nclass Issue extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    handleCheckBoxClick = () => {\n        const { issue } = this.props;\n        if (issue.$closed) {\n            return;\n        }\n        const { closeIssue } = this.context.store;\n        closeIssue(issue.number);\n    }\n    toggleFlag = () => {\n        const { issue } = this.props;\n        const { setIssueFlag } = this.context.store;\n        setIssueFlag(issue.number, !issue.$isImportant);\n    }\n    select = () => {\n        const { issue } = this.props;\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(issue.number);\n    }\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\" onClick={this.select} data-is-selected={issue.$selected} data-is-faded={issue.$deferred}>\n                <div className=\"check-box\" onClick={this.handleCheckBoxClick} data-is-important={issue.$isImportant}>\n                    {issue.$closed && <div className=\"closed\" />}\n                </div>\n                <div className=\"main\">\n                    <div className=\"title\" data-is-closed={issue.$closed}>{issue.title}</div>\n                    <div className=\"labels\">\n                        {\n                            issue.$displayLabels.map(label => <div\n                                className=\"label\"\n                                key={label.id}\n                                style={{\n                                    backgroundColor: `#${label.color}`,\n                                    color: decideFontColor(label.color),\n                                }}\n                            >\n                                {label.name}\n                            </div>)\n                        }\n                    </div>\n                    <div className=\"flag\" onClick={this.toggleFlag}>\n                        <Icon type=\"flag\" theme={issue.$isImportant ? 'twoTone' : null} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Issue from './issue';\nimport './index.less';\n\n@observer\nclass IssueList extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    componentWillUnmount() {\n        this.clearSelection();\n    }\n    clearSelection = () => {\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(0);\n    }\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            <div className=\"ui-issue-list-body\">\n                {\n                    issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n                }\n            </div>\n            <div className=\"ui-issue-list-blank\" onClick={this.clearSelection}></div>\n        </div>\n    }\n}\n\nexport default IssueList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\nimport RightBar from './components/right-bar';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tif (isLogin()) {\n\t\t\tinit();\n\t\t}\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> Initializing...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<RightBar />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}