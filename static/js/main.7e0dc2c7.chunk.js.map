{"version":3,"sources":["helpers/util.js","helpers/loading.js","helpers/remote.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/modal/index.js","components/header/add.js","components/header/index.js","components/sidebar.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","decideFontColor","background","parseInt","substr","hideIndicator","token","request","popRequest","API_ROOT","concat","REPO_ROOT","goToIssue","number","window","open","getHeaders","headers","Accept","localStorage","getItem","Authorization","$request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","payload","_ref2","_ref2$getData","getData","_ref2$hideLoading","hideLoading","_ref2$loadingText","loadingText","_ref2$throwException","throwException","_ref2$method","method","requestUrl","response","_args","arguments","wrap","_context","prev","next","length","undefined","text","message","loading","indexOf","keys","forEach","key","index","value","axios","put","sent","delete","post","patch","get","t0","abrupt","data","t1","error","String","stop","_x","_x2","apply","this","$get","options","$post","$patch","fetchIssues","issues","direction","closeIssue","_callee2","id","_context2","state","addIssue","_ref3","title","deleteLabel","name","issueNumber","$delete","isListLabel","label","test","description","store","_this","map","issue","objectSpread","$displayLabels","labels","filter","o","$isImportant","some","$selected","selectedIssueNumber","computedIssues","observable","computed","action","_this2","initState","_this3","sidebarCollapsed","_this4","find","$closed","fakeNumber","Date","getTime","_this5","push","_callee3","important","_args3","_context3","_this6","names","Array","isArray","toConsumableArray","_this7","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","exact","node","react_default","createElement","icon","type","Modal","visible","changing","prevProps","setTimeout","setState","_this$props","okText","onOk","onCancel","okButtonProps","_this$state","createPortal","className","data-is-hide","es_button","onClick","assign","document","body","nextProps","prevState","defaultProps","HeaderAdd","observer","modalVisible","handleInputChange","console","log","submit","context","input","Fragment","modal_Modal","placeholder","autoFocus","ref","contextTypes","Header","toggleSidebar","_this$context$store","setSidebarCollapse","goToGithub","_this$context$store2","add","react_router","menu","disabled","Sidebar","data-is-collapsed","react_router_dom","to","Login","onTokenChange","e","target","login","setItem","location","href","card","onChange","Issue","handleCheckBoxClick","toggleFlag","setIssueFlag","select","setSelectedIssueNumber","data-is-selected","data-is-important","data-is-closed","style","backgroundColor","color","theme","IssueList","components_issue_list_issue","InboxPage","inboxIssues","components_issue_list","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","init","spin","size","components_header","components_sidebar","component","Inbox","NextAction","Important","List","login_Login","React","Boolean","hostname","match","ReactDOM","render","provider_Provider","src_app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2EAAAA,EAAOC,QAAQC,gBAAkB,SAAAC,GAI7B,MAAW,KAHCC,SAASD,EAAWE,OAAO,EAAG,GAAI,IAGnB,KAFbD,SAASD,EAAWE,OAAO,EAAG,GAAI,IAEN,KAD7BD,SAASD,EAAWE,OAAO,EAAG,GAAI,IACI,IACxC,UAEJ,8QCLPC,ECQAC,sLDPAC,EAAU,EAODC,EAAa,WACJ,IAAdD,KACAF,KCPKI,EAAQ,+BAAAC,OADG,mBAEXC,EAAS,qBAAAD,OAFE,kBAEF,WAETE,EAAY,SAAAC,GAAM,OAAIC,OAAOC,KAAP,GAAAL,OAAeC,EAAf,KAAAD,OAA4BG,KAIlDG,EAAa,WACtB,IAAMC,EAAU,CACZC,OAAQ,gDAQZ,OANKZ,IACDA,EAAQa,aAAaC,QAAQ,eAE7Bd,IACAW,EAAQI,cAAR,UAAAX,OAAkCJ,IAE/BW,GAGEK,EAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EACpBC,EACAC,GAFoB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3B,EAAA4B,EAAAC,UAAA,OAAApB,EAAAC,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAlB,EAAAa,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAShB,GATgBZ,EAAAD,EAIhBE,eAJgB,IAAAD,EAIN,GAJMA,EAAAE,EAAAH,EAKhBI,mBALgB,IAAAD,KAAAE,EAAAL,EAMhBM,mBANgB,IAAAD,EAMF,KANEA,EAAAE,EAAAP,EAOhBQ,sBAPgB,IAAAD,KAAAE,EAAAT,EAQhBU,cARgB,IAAAD,EAQP,MAROA,EAAAO,EAAAC,KAAA,EAYXb,IDjCeiB,ECkCJf,EDjCF,IAAd/B,MACAF,EAAgBiD,EAAA,EAAQC,QAAQF,GAAQ,UAAW,KCmC/CV,GACgC,IAAhCb,EAAS0B,QAAQ/C,GACXA,EAAWqB,EACXA,EACVN,OAAOiC,KAAKvB,GAASwB,QAAQ,SAACC,EAAKC,GAC/B,IAAMC,EAAQ3B,EAAQyB,QACRP,IAAVS,IAGJlB,IAAyB,IAAViB,EAAc,IAAM,KAArB,GAAAlD,OAA+BiD,EAA/B,KAAAjD,OAAsCmD,MAGlD5C,EAAUD,IA5BAgC,EAAAC,KAAA,EA8BG,QAAXP,EA9BQ,CAAAM,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA+BSY,IAAMC,IAAIpB,EAAYZ,EAAS,CAAEd,YA/B1C,QA+BR2B,EA/BQI,EAAAgB,KAAAhB,EAAAE,KAAA,oBAgCU,WAAXR,EAhCC,CAAAM,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAiCSY,IAAMG,OAAOtB,EAAY,CAAE1B,YAjCpC,QAiCR2B,EAjCQI,EAAAgB,KAAAhB,EAAAE,KAAA,oBAkCU,SAAXR,EAlCC,CAAAM,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAmCSY,IAAMI,KAAKvB,EAAYZ,EAAS,CAAEd,YAnC3C,QAmCR2B,EAnCQI,EAAAgB,KAAAhB,EAAAE,KAAA,oBAoCU,UAAXR,EApCC,CAAAM,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAqCSY,IAAMK,MAAMxB,EAAYZ,EAAS,CAAEd,YArC5C,QAqCR2B,EArCQI,EAAAgB,KAAAhB,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAuCSY,IAAMM,IAAIzB,EAAY,CAAE1B,YAvCjC,QAuCR2B,EAvCQI,EAAAgB,KAAA,QAyCP5B,GACD5B,IA1CQwC,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,SA6CPZ,GACD5B,IA9CQwC,EAAAqB,GAAA,eAAArB,EAAAsB,OAAA,SAmDT1B,EAAS2B,MAnDA,WAAAvB,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,UAqDO,IAAnBR,EArDY,CAAAQ,EAAAE,KAAA,eAAAF,EAAAwB,GAAA,QAuDS,wCAAdxB,EAAAwB,GAAElB,SAAqDN,EAAAwB,GAAElB,QAChEA,EAAA,EAAQmB,MAAOzB,EAAAwB,GAAE5B,UAAYI,EAAAwB,GAAE5B,SAAS2B,MAAQvB,EAAAwB,GAAE5B,SAAS2B,KAAKjB,SAAYoB,OAAM1B,EAAAwB,KAxDtE,yBAAAxB,EAAA2B,ODrBG,IAACtB,GCqBJxB,EAAA,yBAAH,gBAAA+C,EAAAC,GAAA,OAAAtD,EAAAuD,MAAAC,KAAAjC,YAAA,GAiERkC,EAAO,SAAClD,EAAUC,GAA0B,IAAjBkD,EAAiBnC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAP,GAE9C,OADAmC,EAAQ/C,QAAUH,EACXT,EAASQ,EAAU,KAAMmD,IAMvBC,EAAQ,SAACpD,EAAUC,GAA0B,IAAjBkD,EAAiBnC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAP,GAE/C,OADAmC,EAAQvC,OAAS,OACVpB,EAASQ,EAAUC,EAASkD,IAE1BE,EAAS,SAACrD,EAAUC,GAA0B,IAAjBkD,EAAiBnC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAP,GAEhD,OADAmC,EAAQvC,OAAS,QACVpB,EAASQ,EAAUC,EAASkD,ICtG1BG,EAAW,eAAA7D,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAwD,EAAA,OAAA3D,EAAAC,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACF8B,EAAI,UAAY,CAAEM,UAAW,OAAS,CAAElD,aAAa,IADnD,cACjBiD,EADiBrC,EAAAgB,KAAAhB,EAAAsB,OAAA,SAEhBe,GAFgB,wBAAArC,EAAA2B,SAAA9C,MAAH,yBAAAN,EAAAuD,MAAAC,KAAAjC,YAAA,GAiBXyC,EAAU,eAAAvD,EAAAR,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA4D,EAAOC,GAAP,OAAA/D,EAAAC,EAAAoB,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAApB,OAAA,SAAca,EAAM,WAAAzE,OAAY+E,GAAM,CAAEE,MAAO,WAA/C,wBAAAD,EAAAf,SAAAa,MAAH,gBAAAZ,GAAA,OAAA5C,EAAA8C,MAAAC,KAAAjC,YAAA,GAEV8C,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OAAeZ,EAAM,UAAW,CAAEY,WAO7CC,EAAc,SAACC,EAAMC,GAAP,OD8EJ,SAACnE,EAAUC,GAA0B,IAAjBkD,EAAiBnC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAP,GAEjD,OADAmC,EAAQvC,OAAS,SACVpB,EAASQ,EAAUC,EAASkD,GChFWiB,CAAO,WAAAxF,OAAYuF,EAAZ,YAAAvF,OAAkCsF,KCxBrFG,EAAc,SAAAC,GAAK,MAAI,WAAWC,KAAKD,EAAME,cAyHpCC,EAAA,miBAhHoB,IAAAC,EAAAzB,KAC3B,OAAOA,KAAKM,OAAOoB,IAAI,SAAAC,GACnB,OAAOlF,OAAAmF,EAAA,EAAAnF,CAAA,GACAkF,EADP,CAEIE,eAAgBF,EAAMG,OAAOC,OAAO,SAAAC,GAAC,MAAe,cAAXA,EAAEf,OAC3CgB,aAAcN,EAAMG,OAAOI,KAAK,SAAAF,GAAC,MAAe,cAAXA,EAAEf,OACvCkB,UAAWR,EAAM7F,SAAW2F,EAAKW,iEAMzC,OAAOpC,KAAKqC,eAAeN,OAAO,SAAAJ,GAC9B,QAAKA,EAAME,eAAezD,SAGlBuD,EAAME,eAAeK,KAAKd,yCAKtC,OAAOpB,KAAKqC,eAAeN,OAAO,SAAAJ,GAAK,OAAoC,IAAhCA,EAAME,eAAezD,iDAIhE,OAAO4B,KAAKqC,eAAeN,OAAO,SAAAJ,GAAK,OAAIA,EAAMM,kDAIjD,OAAOjC,KAAKqC,eAAeN,OAAO,SAAAJ,GAAK,OAAIA,EAAMG,OAAOI,KAAKd,kDAnChEkB,6EAAoB,0CACpBA,6EAAoB,6CACpBA,6EAAuB,2DACvBA,8EAA8B,sDAC9BA,8EAAiC,+CAEjCC,4HAWAA,yHASAA,wHAIAA,uHAIAA,8GAIAC,8GACM,SAAA1F,IAAA,IAAAwD,EAAAwB,EAAA,OAAAnF,EAAAC,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBkC,IADlB,cACGC,EADHrC,EAAAgB,KAEHwD,EAAKnC,OAASA,EAFXrC,EAAAE,KAAA,ED7BsB8B,EAAK,UAAW,GAAI,CAAE5C,aAAa,IC6BzD,OAIGyE,EAJH7D,EAAAgB,KAKHwD,EAAKX,OAASA,EAEdW,EAAKC,UAAY,OAPd,wBAAAzE,EAAA2B,SAAA9C,yDAUN0F,yFAA4B,SAAC1D,GAC1B6D,EAAKC,iBAAmB9D,8CAG3B0D,yFAAoB,SAAC1G,GAElB,IADc+G,EAAKvC,OAAOwC,KAAK,SAAAd,GAAC,OAAIA,EAAElG,SAAWA,IAE7C,OAAOyC,EAAA,EAAQmB,MAAM,qBAAuB5D,GAEhD0E,EAAW1E,GACX+G,EAAKvC,OAASuC,EAAKvC,OAAOoB,IAAI,SAAAC,GAC1B,OAAIA,EAAM7F,SAAWA,EACV6F,EAEJlF,OAAAmF,EAAA,EAAAnF,CAAA,GACAkF,EADP,CAEIoB,SAAS,gDAKpBP,+HAAkB,SAAA/B,EAAAxD,GAAA,IAAA8D,EAAAiC,EAAArB,EAAA,OAAAhF,EAAAC,EAAAoB,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAS4C,EAAT9D,EAAS8D,MAClBiC,GAAa,IAAIC,MAAOC,UAC9BC,EAAK7C,OAAO8C,KAAK,CACbtH,OAAQkH,EACRjC,QACAe,OAAQ,GACRD,eAAgB,KANLlB,EAAAxC,KAAA,EAQK0C,EAAS,CAAEE,UARhB,OAQTY,EARShB,EAAA1B,KASfkE,EAAK7C,OAAS6C,EAAK7C,OAAOoB,IAAI,SAAAM,GAC1B,OAAIA,EAAElG,SAAWkH,EACNhB,EAEJvF,OAAAmF,EAAA,EAAAnF,CAAA,GAAKuF,EAAML,KAbP,wBAAAhB,EAAAf,SAAAa,yGAiBlB+B,+HAAsB,SAAAa,EAAOvH,GAAP,IAAAwH,EAAAjC,EAAAkC,EAAAxF,UAAA,OAAApB,EAAAC,EAAAoB,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,OAAemF,IAAfC,EAAAnF,OAAA,QAAAC,IAAAkF,EAAA,KAAAA,EAAA,GACblC,EAAQoC,EAAK3B,OAAOgB,KAAK,SAAAd,GAAC,MAAe,cAAXA,EAAEf,OACtCwC,EAAKnD,OAASmD,EAAKpB,eAAeX,IAAI,SAAAC,GAClC,OAAIA,EAAM7F,SAAWA,EACV6F,EAEP2B,EACI3B,EAAMM,aACCN,GD/EF+B,ECiFArC,EAAMJ,KDjFCC,ECiFKS,EAAM7F,ODjFKqE,EAAK,WAAAxE,OACtCuF,EADsC,WAEjD,CAAEY,OAAQ6B,MAAMC,QAAQF,GAASA,EAAQ,CAACA,KCgFvBjH,OAAAmF,EAAA,EAAAnF,CAAA,GACAkF,EADP,CAEIG,OAAM,GAAAnG,OAAAc,OAAAoH,EAAA,EAAApH,CAAMkF,EAAMG,QAAZ,CAAoBT,OAGzBM,EAAMM,cAGXjB,EAAYK,EAAMJ,KAAMU,EAAM7F,QACvBW,OAAAmF,EAAA,EAAAnF,CAAA,GACAkF,EADP,CAEIG,OAAQH,EAAMG,OAAOC,OAAO,SAAAC,GAAC,MAAe,cAAXA,EAAEf,UAL5BU,EDxFH,IAAC+B,EAAOxC,ICuEL,wBAAAsC,EAAA5D,SAAAyD,mHA4BtBb,yFAAgC,SAAA1G,GAAM,OAAIgI,EAAK1B,oBAAsBtG,kDCvHrDiI,6LAWb,MAAO,CACHvC,MAAOxB,KAAKgE,MAAMxC,wCAKtB,OAAOxB,KAAKgE,MAAMC,gBAjBYC,aAAjBH,GAMVI,kBAAoB,CACvB3C,MAAO4C,KAAUC,kFCPZC,GAAQ,CACjB,CAAEC,KAAM,IAAKC,OAAO,EAAMC,KAAMC,EAAA9H,EAAA+H,cAAA,YAAMD,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,UAAjB,WAChC,CAAEN,KAAM,eAAgBE,KAAMC,EAAA9H,EAAA+H,cAAA,YAAMD,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,cAAjB,iBAC9B,CAAEN,KAAM,aAAcE,KAAMC,EAAA9H,EAAA+H,cAAA,YAAMD,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,SAAjB,eAC5B,CAAEN,KAAM,QAASE,KAAMC,EAAA9H,EAAA+H,cAAA,YAAMD,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,mBAAjB,8CCFNC,sNAsBjBlE,MAAQ,CACJmE,SAAS,EACTC,UAAU,qFAEKC,GAAW,IAAAxC,EAAAzC,MACrBiF,EAAUF,SAAW/E,KAAKgE,MAAMe,QACjCG,WAAW,kBAAMzC,EAAK0C,SAAS,CAAEJ,SAAS,EAAMC,UAAU,MACnDC,EAAUF,UAAY/E,KAAKgE,MAAMe,SACxCG,WAAW,kBAAMzC,EAAK0C,SAAS,CAAEH,UAAU,KAAU,sCAGpD,IAAAI,EAC6CpF,KAAKgE,MAA/CqB,EADHD,EACGC,OAAQC,EADXF,EACWE,KAAMC,EADjBH,EACiBG,SAAUC,EAD3BJ,EAC2BI,cAD3BC,EAEyBzF,KAAKY,MAA3BmE,EAFHU,EAEGV,QAASC,EAFZS,EAEYT,SACjB,OAAKhF,KAAKgE,MAAMe,SAAYC,EAGrBU,uBAAahB,EAAA9H,EAAA+H,cAAA,SAAOgB,UAAU,kBACjCjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,UACfjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,UACXjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,gBAAgBC,gBAAeb,GAC1CL,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,QAAQ3F,KAAKgE,MAAMC,UAClCS,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,UACXjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,UACfjB,EAAA9H,EAAA+H,cAAAkB,GAAA,GAAQC,QAASP,GAAjB,UACAb,EAAA9H,EAAA+H,cAAAkB,GAAA,EAAApJ,OAAAsJ,OAAA,CAAQlB,KAAK,UAAUiB,QAASR,GAAUE,GAAgBH,OAIhEW,SAASC,MAdR,wDA7BiBC,EAAWC,GACvC,OAAKA,EAAUnB,UAAamB,EAAUpB,UAAWmB,EAAUnB,QAKtDoB,EAAUnB,WAAYmB,EAAUpB,SAAYmB,EAAUnB,QAMpD,KALI,CACHC,UAAU,EACVD,SAAS,GAPN,CACHC,UAAU,UAXSd,cAAdY,GACVsB,aAAe,CAClBf,OAAQ,KACRN,SAAS,EACTQ,SAAU,aACVD,KAAM,aACNE,cAAe,yFCmCRa,GAxCdC,+NAKG1F,MAAQ,CACJ2F,cAAc,KAElBC,kBAAoB,SAAA1H,GAChB2H,QAAQC,IAAI5H,GACZ2C,EAAK0D,SAAS,CAAEpE,MAAOjC,OAE3B6H,OAAS,YAGL9F,EAFqBY,EAAKmF,QAAQpF,MAA1BX,UAEC,CAAEE,MADGU,EAAKoF,MAAMA,MAAM/H,QAE/B2C,EAAK0D,SAAS,CAAEoB,cAAc,6EAEzB,IAAA9D,EAAAzC,KACGuG,EAAiBvG,KAAKY,MAAtB2F,aACR,OACI7B,EAAA9H,EAAA+H,cAAAD,EAAA9H,EAAAkK,SAAA,KACIpC,EAAA9H,EAAA+H,cAAA,UAAQmB,QAAS,kBAAMrD,EAAK0C,SAAS,CAAEoB,cAAc,MAAS7B,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,WACzEH,EAAA9H,EAAA+H,cAACoC,GAAD,CACI1B,OAAO,MACPN,QAASwB,EACThB,SAAU,kBAAM9C,EAAK0C,SAAS,CAAEoB,cAAc,KAC9CjB,KAAMtF,KAAK2G,QAEXjC,EAAA9H,EAAA+H,cAAAkC,GAAA,GACIG,YAAY,eACZC,WAAS,EACTC,IAAK,SAAAL,GAAK,OAAIpE,EAAKoE,MAAQA,cA/B3B3C,gBACbiD,aAAe,CAClB3F,MAAO4C,KAAUC,oBCyCV+C,WAxCdd,+NAMGe,cAAgB,WAAM,IAAAC,EAC+B7F,EAAKmF,QAAQpF,MAAtDoB,EADU0E,EACV1E,kBACR2E,EAFkBD,EACQC,qBACN3E,MAGxB4E,WAAa,WAAM,IACPpF,EAAwBX,EAAKmF,QAAQpF,MAArCY,oBACJA,GACAvG,EAAUuG,4EAIT,IAAAqF,EAC6CzH,KAAK4G,QAAQpF,MAAvDoB,EADH6E,EACG7E,iBAAkBR,EADrBqF,EACqBrF,oBAC1B,OAAOsC,EAAA9H,EAAA+H,cAAA,UAAQgB,UAAU,cAC9BjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,gBACFjB,EAAA9H,EAAA+H,cAAA,UAAQmB,QAAS9F,KAAKqH,eAAe3C,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAMjC,EAAmB,cAAgB,eACpF8B,EAAA9H,EAAA+H,cAAA,cAAQD,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,YACnBH,EAAA9H,EAAA+H,cAAC+C,GAAD,OAEJhD,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,cACXjB,EAAA9H,EAAA+H,cAACgD,GAAA,EAAD,KAEQrD,GAAM5C,IAAI,SAAAkG,GAAI,OAAIlD,EAAA9H,EAAA+H,cAACgD,GAAA,EAAD,CAAO/I,IAAKgJ,EAAKrD,KAAMA,KAAMqD,EAAKrD,KAAMC,MAAOoD,EAAKpD,OAAQoD,EAAKnD,UAI/FC,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,iBACXjB,EAAA9H,EAAA+H,cAAA,UAAQkD,UAAWzF,EAAqB0D,QAAS9F,KAAKwH,YAAY9C,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,qBAjCxEX,gBACViD,aAAe,CAClB3F,MAAO4C,KAAUC,qBCaVyD,WAnBdxB,qMAMY,IACG1D,EAAqB5C,KAAK4G,QAAQpF,MAAlCoB,iBACR,OAAO8B,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,cAAcoC,oBAAmBnF,GACnD8B,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,4BAAf,eAEIrB,GAAM5C,IAAI,SAAAkG,GAAI,OAAIlD,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,eAAe/G,IAAKgJ,EAAKrD,MACtDG,EAAA9H,EAAA+H,cAACqD,GAAA,EAAD,CAASC,GAAIL,EAAKrD,KAAMC,MAAOoD,EAAKpD,OAAQoD,EAAKnD,iBAX/CP,gBACXiD,aAAe,CAClB3F,MAAO4C,KAAUC,wCCNJ6D,sNACjBtH,MAAQ,CACJrF,MAAO,MAEX4M,cAAgB,SAAAC,GAAC,OAAI3G,EAAK0D,SAAS,CAAE5J,MAAO6M,EAAEC,OAAOvJ,WACrDwJ,2BAAQ,SAAAxL,IAAA,IAAAvB,EAAA,OAAAoB,EAAAC,EAAAoB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI5C,EAAUkG,EAAKb,MAAfrF,MACRa,aAAamM,QAAQ,aAAchN,GACnCQ,OAAOyM,SAASC,KAAO,IAHnB,wBAAAxK,EAAA2B,SAAA9C,8EAKC,IACGvB,EAAUyE,KAAKY,MAAfrF,MACR,OAAOmJ,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,cAClBjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,QACXjB,EAAA9H,EAAA+H,cAAA+D,GAAA,GAAM3H,MAAM,gBACR2D,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,QACXjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,YACXjB,EAAA9H,EAAA+H,cAAAkC,GAAA,GAAO8B,SAAU3I,KAAKmI,cAAerJ,MAAOvD,EAAOyL,YAAY,+BAC/DtC,EAAA9H,EAAA+H,cAAAkB,GAAA,GAAQgC,UAAWtM,EAAOuK,QAAS9F,KAAKsI,MAAOzD,KAAK,WAApD,4BAlBOX,wBC0DpB0E,WAvDdtC,+NAKGuC,oBAAsB,WAAM,IAChBlH,EAAUF,EAAKuC,MAAfrC,MACJA,EAAMoB,UAIVvC,EADuBiB,EAAKmF,QAAQpF,MAA5BhB,YACGmB,EAAM7F,WAErBgN,WAAa,WAAM,IACPnH,EAAUF,EAAKuC,MAAfrC,OAERoH,EADyBtH,EAAKmF,QAAQpF,MAA9BuH,cACKpH,EAAM7F,QAAS6F,EAAMM,iBAEtC+G,OAAS,WAAM,IACHrH,EAAUF,EAAKuC,MAAfrC,OAERsH,EADmCxH,EAAKmF,QAAQpF,MAAxCyH,wBACetH,EAAM7F,iFAExB,IACG6F,EAAU3B,KAAKgE,MAAfrC,MACR,OACI+C,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,WAAWG,QAAS9F,KAAKgJ,OAAQE,mBAAkBvH,EAAMQ,WACpEuC,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,YAAYG,QAAS9F,KAAK6I,oBAAqBM,oBAAmBxH,EAAMM,cAClFN,EAAMoB,SAAW2B,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,YAErCjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,QACXjB,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,QAAQyD,iBAAgBzH,EAAMoB,SAAUpB,EAAMZ,OAC7D2D,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,UAEPhE,EAAME,eAAeH,IAAI,SAAAL,GAAK,OAAIqD,EAAA9H,EAAA+H,cAAA,OAC9BgB,UAAU,QACV/G,IAAKyC,EAAMX,GACX2I,MAAO,CACHC,gBAAe,IAAA3N,OAAM0F,EAAMkI,OAC3BA,MAAOrO,2BAAgBmG,EAAMkI,SAGhClI,EAAMJ,SAInByD,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,OAAOG,QAAS9F,KAAK8I,YAChCpE,EAAA9H,EAAA+H,cAAAC,GAAA,GAAMC,KAAK,OAAO2E,MAAO7H,EAAMM,aAAe,UAAY,iBA9C9DiC,gBACTiD,aAAe,CAClB3F,MAAO4C,KAAUC,qBCeVoF,WAnBdnD,oNAOO2C,EADmCjJ,KAAK4G,QAAQpF,MAAxCyH,wBACe,oCAElB,IACG3I,EAAWN,KAAKgE,MAAhB1D,OACR,OAAOoE,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,iBAEdrF,EAAOoB,IAAI,SAAAC,GAAK,OAAI+C,EAAA9H,EAAA+H,cAAC+E,GAAD,CAAO9K,IAAK+C,EAAM7F,OAAQ6F,MAAOA,cAZ7CuC,gBACbiD,aAAe,CAClB3F,MAAO4C,KAAUC,qBCOVsF,GAXdrD,qMAKY,IACGsD,EAAgB5J,KAAK4G,QAAQpF,MAA7BoI,YACR,OAAOlF,EAAA9H,EAAA+H,cAAA,WAAKD,EAAA9H,EAAA+H,cAACkF,GAAD,CAAWvJ,OAAQsJ,YANf1F,gBACbiD,aAAe,CAClB3F,MAAO4C,KAAUC,oBCUVyF,GAbdxD,qMAKY,IACGyD,EAAqB/J,KAAK4G,QAAQpF,MAAlCuI,iBACR,OAAOrF,EAAA9H,EAAA+H,cAAA,WACHD,EAAA9H,EAAA+H,cAACkF,GAAD,CAAWvJ,OAAQyJ,YAPF7F,gBAClBiD,aAAe,CAClB3F,MAAO4C,KAAUC,oBCQV2F,GAXd1D,qMAKY,IACG2D,EAAejK,KAAK4G,QAAQpF,MAA5ByI,WACR,OAAOvF,EAAA9H,EAAA+H,cAAA,WAAKD,EAAA9H,EAAA+H,cAACkF,GAAD,CAAWvJ,OAAQ2J,YANhB/F,gBACZiD,aAAe,CAClB3F,MAAO4C,KAAUC,oBCQV6F,GAXd5D,qMAKY,IACG6D,EAAoBnK,KAAK4G,QAAQpF,MAAjC2I,gBACR,OAAOzF,EAAA9H,EAAA+H,cAAA,WAAKD,EAAA9H,EAAA+H,cAACkF,GAAD,CAAWvJ,OAAQ6J,YANXjG,gBACjBiD,aAAe,CAClB3F,MAAO4C,KAAUC,oBC8CV+F,WAvCd9D,iNAOC+D,EADiBrK,KAAK4G,QAAQpF,MAAtB6I,yCAIR,OhB2FO9O,IACDA,EAAQa,aAAaC,QAAQ,eAExBd,EgB1FO,YADIyE,KAAK4G,QAAQpF,MAA3BkB,UAGNgC,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,eACdjB,EAAA9H,EAAA+H,cAAA2F,GAAA,GAAMC,KAAK,UADZ,sCAMD7F,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,OACdjB,EAAA9H,EAAA+H,cAACqD,GAAA,EAAD,KACCtD,EAAA9H,EAAA+H,cAAC6F,GAAD,MACA9F,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,YACdjB,EAAA9H,EAAA+H,cAAC8F,GAAD,MACA/F,EAAA9H,EAAA+H,cAAA,OAAKgB,UAAU,YACdjB,EAAA9H,EAAA+H,cAACgD,GAAA,EAAD,CAAOpD,KAAK,IAAIC,OAAK,EAACkG,UAAWC,KACjCjG,EAAA9H,EAAA+H,cAACgD,GAAA,EAAD,CAAOpD,KAAK,eAAemG,UAAWE,KACtClG,EAAA9H,EAAA+H,cAACgD,GAAA,EAAD,CAAOpD,KAAK,aAAamG,UAAWG,KACpCnG,EAAA9H,EAAA+H,cAACgD,GAAA,EAAD,CAAOpD,KAAK,QAAQmG,UAAWI,SApB5BpG,EAAA9H,EAAA+H,cAACoG,GAAD,aAVQC,IAAM9G,cAChBiD,aAAe,CACf3F,MAAO4C,KAAUC,qBCNL4G,QACW,cAA7BlP,OAAOyM,SAAS0C,UAEe,UAA7BnP,OAAOyM,SAAS0C,UAEhBnP,OAAOyM,SAAS0C,SAASC,MACvB,kECVNC,IAASC,OAAO3G,EAAA9H,EAAA+H,cAAC2G,GAAD,CAAU9J,MAAOA,GAC7BkD,EAAA9H,EAAA+H,cAAC4G,GAAD,OACSvF,SAASwF,eAAe,SDuH/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7e0dc2c7.chunk.js","sourcesContent":["module.exports.decideFontColor = background => {\n    const red = parseInt(background.substr(0, 2), 16);\n    const green = parseInt(background.substr(2, 2), 16);\n    const blue = parseInt(background.substr(4, 2), 16);\n    if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {\n        return '#000000';\n    }\n    return '#ffffff';\n};\n","import { message } from 'antd';\n\nlet hideIndicator;\nlet request = 0;\nexport const pushRequest = (text) => {\n    if (request++ === 0) {\n        hideIndicator = message.loading(text || 'LOADING', 0);\n    }\n};\n\nexport const popRequest = () => {\n    if (request-- === 1) {\n        hideIndicator();\n    }\n};","import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const REPO_URL = '/wangsijie/todo';\nexport const API_ROOT = `https://api.github.com/repos${REPO_URL}`;\nexport const REPO_ROOT = `https://github.com${REPO_URL}/issues`;\n\nexport const goToIssue = number => window.open(`${REPO_ROOT}/${number}`);\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET'\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    return !!token;\n};\n","import { $get, $patch, $post, $delete } from './remote';\n\nexport const fetchIssues = async () => {\n    const issues = await $get(`/issues`, { direction: 'asc' }, { hideLoading: true });\n    return issues;\n    // issues.forEach(issue => {\n    //     const meta = parseMeta(issue.body);\n    //     issue.meta = meta;\n    // });\n    // return issues.filter(issue => {\n    //     if (issue.meta.postpone && issue.meta.postpone.isAfter(moment())) {\n    //         return false;\n    //     }\n    //     return true;\n    // });\n};\n\nexport const fetchLabels = () => $get('/labels', {}, { hideLoading: true });\n\nexport const closeIssue = async (id) => $patch(`/issues/${id}`, { state: 'close' });\n\nexport const addIssue = ({ title }) => $post('/issues', { title });\n\nexport const addLabel = (names, issueNumber) => $post(\n    `/issues/${issueNumber}/labels`,\n    { labels: Array.isArray(names) ? names : [names] }\n);\n\nexport const deleteLabel = (name, issueNumber) => $delete(`/issues/${issueNumber}/labels/${name}`);\n","import {observable, action, computed} from 'mobx';\nimport { message } from 'antd';\nimport { fetchIssues, fetchLabels, closeIssue, addIssue, addLabel, deleteLabel } from '../helpers/github';\n\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n    @observable selectedIssueNumber = 0;\n\n    @computed get computedIssues() {\n        return this.issues.map(issue => {\n            return {\n                ...issue,\n                $displayLabels: issue.labels.filter(o => o.name !== 'important'),\n                $isImportant: issue.labels.some(o => o.name === 'important'),\n                $selected: issue.number === this.selectedIssueNumber,\n            };\n        });\n    }\n    \n    @computed get nextActionIssues() {\n        return this.computedIssues.filter(issue => {\n            if (!issue.$displayLabels.length) {\n                return false;\n            }\n            return !issue.$displayLabels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.computedIssues.filter(issue => issue.$displayLabels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.computedIssues.filter(issue => issue.$isImportant);\n    }\n\n    @computed get listIssues() {\n        return this.computedIssues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels;\n\n        this.initState = 'done';\n    }\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n\n    @action closeIssue = (number) => {\n        const issue = this.issues.find(o => o.number === number);\n        if (!issue) {\n            return message.error('Issue not found: #' + number);\n        }\n        closeIssue(number);\n        this.issues = this.issues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            return {\n                ...issue,\n                $closed: true,\n            };\n        });\n    }\n\n    @action addIssue = async ({ title }) => {\n        const fakeNumber = new Date().getTime();\n        this.issues.push({\n            number: fakeNumber,\n            title,\n            labels: [],\n            $displayLabels: [],\n        });\n        const issue = await addIssue({ title });\n        this.issues = this.issues.map(o => {\n            if (o.number !== fakeNumber) {\n                return o;\n            }\n            return { ...o, ...issue };\n        });\n    }\n\n    @action setIssueFlag = async (number, important = true) => {\n        const label = this.labels.find(o => o.name === 'important');\n        this.issues = this.computedIssues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            if (important) {\n                if (issue.$isImportant) {\n                    return issue;\n                }\n                addLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: [...issue.labels, label],\n                };\n            } else {\n                if (!issue.$isImportant) {\n                    return issue;\n                }\n                deleteLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: issue.labels.filter(o => o.name !== 'important'),\n                };\n            }\n        });\n    }\n\n    @action setSelectedIssueNumber = number => this.selectedIssueNumber = number;\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/', exact: true, node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport './index.less';\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        okText: 'OK',\n        visible: false,\n        onCancel: () => {},\n        onOk: () => {},\n        okButtonProps: {},\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.changing && !prevState.visible && nextProps.visible) {\n            return {\n                changing: true,\n            };\n        }\n        if (!prevState.changing && prevState.visible && !nextProps.visible) {\n            return {\n                changing: true,\n                visible: false,\n            };\n        }\n        return null;\n    }\n    state = {\n        visible: false,\n        changing: false,\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.visible && this.props.visible) {\n            setTimeout(() => this.setState({ visible: true, changing: false }));\n        } else if (prevProps.visible && !this.props.visible) {\n            setTimeout(() => this.setState({ changing: false }), 280);\n        }\n    }\n    render() {\n        const { okText, onOk, onCancel, okButtonProps } = this.props;\n        const { visible, changing } = this.state;\n        if (!this.props.visible && !changing) {\n            return null;\n        }\n        return createPortal(<aside className=\"ui-modal-cover\">\n            <div className=\"cover\"></div>\n            <div className=\"window\">\n                <div className=\"window-shadow\" data-is-hide={!visible}>\n                    <div className=\"body\">{this.props.children}</div>\n                    <div className=\"footer\">\n                        <div className=\"blank\"></div>\n                        <Button onClick={onCancel}>Cancel</Button>\n                        <Button type=\"primary\" onClick={onOk} {...okButtonProps}>{okText}</Button>\n                    </div>\n                </div>\n            </div>\n        </aside>, document.body);\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Input } from 'antd';\nimport { observer } from 'mobx-react';\nimport Modal from '../modal';\n\n@observer\nclass HeaderAdd extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    state = {\n        modalVisible: false,\n    }\n    handleInputChange = value => {\n        console.log(value);\n        this.setState({ title: value });\n    }\n    submit = () => {\n        const { addIssue } = this.context.store;\n        const title = this.input.input.value;\n        addIssue({ title });\n        this.setState({ modalVisible: false });\n    }\n    render() {\n        const { modalVisible } = this.state;\n        return (\n            <>\n                <button onClick={() => this.setState({ modalVisible: true })}><Icon type=\"inbox\" /></button>\n                <Modal\n                    okText=\"Add\"\n                    visible={modalVisible}\n                    onCancel={() => this.setState({ modalVisible: false })}\n                    onOk={this.submit}\n                >\n                    <Input\n                        placeholder=\"Unnamed Task\"\n                        autoFocus\n                        ref={input => this.input = input}\n                    />\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default HeaderAdd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../../constants/menus';\nimport { goToIssue } from '../../helpers/remote';\nimport Add from './add';\nimport './index.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    goToGithub = () => {\n        const { selectedIssueNumber } = this.context.store;\n        if (selectedIssueNumber) {\n            goToIssue(selectedIssueNumber);\n        }\n    }\n\n    render() {\n        const { sidebarCollapsed, selectedIssueNumber } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<div className=\"left-buttons\">\n                <button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n                <button><Icon type=\"reload\" /></button>\n                <Add />\n            </div>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path} exact={menu.exact}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n            <div className=\"right-buttons\">\n                <button disabled={!selectedIssueNumber} onClick={this.goToGithub}><Icon type=\"github\" /></button>\n            </div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path} exact={menu.exact}>{menu.node}</NavLink>\n                </div>)\n            }\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    login = async () => {\n        const { token } = this.state;\n        localStorage.setItem('gist-token', token);\n        window.location.href = '/';\n    }\n    render() {\n        const { token } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"登陆\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"输入gist api token\" />\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">登陆</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport { observer } from 'mobx-react';\nimport { decideFontColor } from '../../helpers/util';\nimport './issue.less';\n\n@observer\nclass Issue extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    handleCheckBoxClick = () => {\n        const { issue } = this.props;\n        if (issue.$closed) {\n            return;\n        }\n        const { closeIssue } = this.context.store;\n        closeIssue(issue.number);\n    }\n    toggleFlag = () => {\n        const { issue } = this.props;\n        const { setIssueFlag } = this.context.store;\n        setIssueFlag(issue.number, !issue.$isImportant);\n    }\n    select = () => {\n        const { issue } = this.props;\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(issue.number);\n    }\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\" onClick={this.select} data-is-selected={issue.$selected}>\n                <div className=\"check-box\" onClick={this.handleCheckBoxClick} data-is-important={issue.$isImportant}>\n                    {issue.$closed && <div className=\"closed\" />}\n                </div>\n                <div className=\"main\">\n                    <div className=\"title\" data-is-closed={issue.$closed}>{issue.title}</div>\n                    <div className=\"labels\">\n                        {\n                            issue.$displayLabels.map(label => <div\n                                className=\"label\"\n                                key={label.id}\n                                style={{\n                                    backgroundColor: `#${label.color}`,\n                                    color: decideFontColor(label.color),\n                                }}\n                            >\n                                {label.name}\n                            </div>)\n                        }\n                    </div>\n                    <div className=\"flag\" onClick={this.toggleFlag}>\n                        <Icon type=\"flag\" theme={issue.$isImportant ? 'twoTone' : null} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Issue from './issue';\nimport './index.less';\n\n@observer\nclass IssueList extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    componentWillUnmount() {\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(0);\n    }\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            {\n                issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n            }\n        </div>\n    }\n}\n\nexport default IssueList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tinit();\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> 正在初始化...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}