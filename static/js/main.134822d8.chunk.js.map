{"version":3,"sources":["helpers/remote.js","helpers/loading.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/modal/index.js","components/header/add.js","components/header/index.js","components/sidebar.js","components/right-bar/index.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js","helpers/util.js"],"names":["token","popRequest","store","popLoading","REPO_URL","localStorage","getItem","API_ROOT","concat","REPO_ROOT","goToIssue","number","window","open","getHeaders","headers","Accept","Authorization","$request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","payload","_ref2","_ref2$getData","getData","_ref2$hideLoading","hideLoading","_ref2$loadingText","_ref2$throwException","throwException","_ref2$method","method","requestUrl","response","_args","arguments","wrap","_context","prev","next","length","undefined","loadingText","pushLoading","indexOf","keys","forEach","key","index","value","axios","put","sent","delete","post","patch","get","t0","abrupt","data","t1","message","error","String","stop","_x","_x2","apply","this","$get","options","$post","$patch","isLogin","fetchIssues","issues","direction","_","Date","getTime","includes","status","removeItem","location","reload","closeIssue","_callee2","id","_context2","state","addIssue","_ref3","title","deleteLabel","name","issueNumber","$delete","updateIssueLabels","labels","$put","map","label","updateIssue","debounce","isListLabel","test","description","filter","o","_this","issue","objectSpread","$displayLabels","$isImportant","some","$selected","selectedIssueNumber","computedIssues","_this2","find","observable","computed","action","_this3","initState","_this4","loading","_this5","_this6","sidebarCollapsed","_this7","rightBarCollapsed","_this8","$closed","fakeNumber","_this9","push","_callee3","important","_args3","_context3","_this10","names","Array","isArray","toConsumableArray","_this11","_this12","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","exact","node","react_default","createElement","icon","type","Modal","visible","changing","prevProps","setTimeout","setState","_this$props","okText","onOk","onCancel","okButtonProps","_this$state","createPortal","className","data-is-hide","es_button","onClick","assign","document","body","nextProps","prevState","defaultProps","HeaderAdd","observer","modalVisible","handleInputChange","console","log","submit","context","input","Fragment","modal_Modal","placeholder","autoFocus","ref","contextTypes","Header","toggleSidebar","_this$context$store","setSidebarCollapse","toggleRightBar","_this$context$store2","setRightBarCollapse","goToGithub","_this$context$store3","init","_this$context$store4","data-is-loading","add","react_router","menu","disabled","Sidebar","href","data-is-collapsed","react_router_dom","to","logout","CheckableTag","TextArea","RightBar","handleLabelChange","checked","selectedIssue","handleTitleChange","titleRef","textAreaRef","displayLabels","selectedLabels","createdAt","created_at","updatedAt","updated_at","defaultValue","rows","onChange","style","--label-font-color","decideFontColor","color","--label-back-color","moment","format","empty","Login","repo","onTokenChange","e","target","onRepoChange","login","setItem","_this$state2","card","Issue","handleCheckBoxClick","toggleFlag","setIssueFlag","select","setSelectedIssueNumber","data-is-selected","data-is-important","data-is-closed","backgroundColor","theme","IssueList","clearSelection","components_issue_list_issue","InboxPage","inboxIssues","components_issue_list","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","spin","size","components_header","components_sidebar","component","Inbox","NextAction","Important","List","components_right_bar","login_Login","React","Boolean","hostname","match","ReactDOM","render","provider_Provider","src_app","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","background","parseInt","substr"],"mappings":"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","file":"static/js/main.134822d8.chunk.js","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const REPO_URL = localStorage.getItem('issue-todo-repo');\nexport const API_ROOT = REPO_URL && `https://api.github.com/repos${REPO_URL}`;\nexport const REPO_ROOT = REPO_URL && `https://github.com${REPO_URL}/issues`;\n\nexport const goToIssue = number => window.open(`${REPO_ROOT}/${number}`);\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('issue-todo-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET'\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('issue-todo-token');\n    }\n    return !!token;\n};\n","import store from '../store';\n\nexport const pushRequest = () => {\n    store.pushLoading();\n};\n\nexport const popRequest = () => {\n    store.popLoading();\n};","import { $get, $patch, $post, $delete, $put } from './remote';\n\nexport const fetchIssues = async () => {\n    try {\n        const issues = await $get(`/issues`, { direction: 'asc', _: new Date().getTime() }, { throwException: true });\n        return issues;\n    } catch (e) {\n        if (e.response && [401, 404].includes(e.response.status)) {\n            localStorage.removeItem('issue-todo-token');\n            localStorage.removeItem('issue-todo-repo');\n            window.location.reload();\n        } else {\n            throw e;\n        }\n    }\n    // issues.forEach(issue => {\n    //     const meta = parseMeta(issue.body);\n    //     issue.meta = meta;\n    // });\n    // return issues.filter(issue => {\n    //     if (issue.meta.postpone && issue.meta.postpone.isAfter(moment())) {\n    //         return false;\n    //     }\n    //     return true;\n    // });\n};\n\nexport const fetchLabels = () => $get(`/labels`, { _: new Date().getTime() });\n\nexport const closeIssue = async (id) => $patch(`/issues/${id}`, { state: 'close' });\n\nexport const addIssue = ({ title }) => $post('/issues', { title });\n\nexport const addLabel = (names, issueNumber) => $post(\n    `/issues/${issueNumber}/labels`,\n    { labels: Array.isArray(names) ? names : [names] }\n);\n\nexport const deleteLabel = (name, issueNumber) => $delete(`/issues/${issueNumber}/labels/${name}`);\n\nexport const updateIssueLabels = (number, labels) => $put(\n    `/issues/${number}/labels`,\n    {\n        labels: labels.map(label => label.name),\n    }\n);\n\nexport const updateIssue = (number, data) => $patch(\n    `/issues/${number}`,\n    data,\n);\n","import {observable, action, computed} from 'mobx';\nimport { message } from 'antd';\nimport _ from 'lodash';\nimport {\n    fetchIssues, fetchLabels, closeIssue, addIssue, addLabel, deleteLabel,\n    updateIssueLabels, updateIssue as _updateIssue,\n} from '../helpers/github';\n\nconst updateIssue = _.debounce(_updateIssue, 1000);\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n    @observable rightBarCollapsed = false;\n    @observable selectedIssueNumber = 0;\n    @observable loading = false;\n\n    @computed get displayLabels() {\n        return this.labels.filter(o => o.name !== 'important');\n    }\n\n    @computed get computedIssues() {\n        return this.issues.map(issue => {\n            return {\n                ...issue,\n                $displayLabels: issue.labels.filter(o => o.name !== 'important'),\n                $isImportant: issue.labels.some(o => o.name === 'important'),\n                $selected: issue.number === this.selectedIssueNumber,\n            };\n        });\n    }\n    \n    @computed get nextActionIssues() {\n        return this.computedIssues.filter(issue => {\n            if (!issue.$displayLabels.length) {\n                return false;\n            }\n            return !issue.$displayLabels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.computedIssues.filter(issue => issue.$displayLabels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.computedIssues.filter(issue => issue.$isImportant);\n    }\n\n    @computed get listIssues() {\n        return this.computedIssues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n    @computed get selectedIssue() {\n        return this.computedIssues.find(issue => issue.number === this.selectedIssueNumber);\n    }\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels;\n\n        this.initState = 'done';\n    }\n\n    @action pushLoading = () => this.loading++;\n    @action popLoading = () => this.loading--;\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n\n    @action setRightBarCollapse = (value) => {\n        this.rightBarCollapsed = value;\n    }\n\n    @action closeIssue = (number) => {\n        const issue = this.issues.find(o => o.number === number);\n        if (!issue) {\n            return message.error('Issue not found: #' + number);\n        }\n        closeIssue(number);\n        this.issues = this.issues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            return {\n                ...issue,\n                $closed: true,\n            };\n        });\n    }\n\n    @action addIssue = async ({ title }) => {\n        const fakeNumber = new Date().getTime();\n        this.issues.push({\n            number: fakeNumber,\n            title,\n            labels: [],\n            $displayLabels: [],\n        });\n        const issue = await addIssue({ title });\n        this.issues = this.issues.map(o => {\n            if (o.number !== fakeNumber) {\n                return o;\n            }\n            return { ...o, ...issue };\n        });\n    }\n\n    @action setIssueFlag = async (number, important = true) => {\n        const label = this.labels.find(o => o.name === 'important');\n        this.issues = this.computedIssues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            if (important) {\n                if (issue.$isImportant) {\n                    return issue;\n                }\n                addLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: [...issue.labels, label],\n                };\n            } else {\n                if (!issue.$isImportant) {\n                    return issue;\n                }\n                deleteLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: issue.labels.filter(o => o.name !== 'important'),\n                };\n            }\n        });\n    }\n\n    @action setSelectedIssueNumber = number => this.selectedIssueNumber = number;\n\n    @action updateIssue = (number, data) => {\n        this.issues = this.issues.map(issue => {\n            if (issue.number === number) {\n                if (data.labels) {\n                    updateIssueLabels(number, data.labels);\n                } else {\n                    updateIssue(number, data);\n                }\n                return { ...issue, ...data };\n            }\n            return issue;\n        });\n    }\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/', exact: true, node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport './index.less';\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        okText: 'OK',\n        visible: false,\n        onCancel: () => {},\n        onOk: () => {},\n        okButtonProps: {},\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.changing && !prevState.visible && nextProps.visible) {\n            return {\n                changing: true,\n            };\n        }\n        if (!prevState.changing && prevState.visible && !nextProps.visible) {\n            return {\n                changing: true,\n                visible: false,\n            };\n        }\n        return null;\n    }\n    state = {\n        visible: false,\n        changing: false,\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.visible && this.props.visible) {\n            setTimeout(() => this.setState({ visible: true, changing: false }));\n        } else if (prevProps.visible && !this.props.visible) {\n            setTimeout(() => this.setState({ changing: false }), 280);\n        }\n    }\n    render() {\n        const { okText, onOk, onCancel, okButtonProps } = this.props;\n        const { visible, changing } = this.state;\n        if (!this.props.visible && !changing) {\n            return null;\n        }\n        return createPortal(<aside className=\"ui-modal-cover\">\n            <div className=\"cover\"></div>\n            <div className=\"window\">\n                <div className=\"window-shadow\" data-is-hide={!visible}>\n                    <div className=\"body\">{this.props.children}</div>\n                    <div className=\"footer\">\n                        <div className=\"blank\"></div>\n                        <Button onClick={onCancel}>Cancel</Button>\n                        <Button type=\"primary\" onClick={onOk} {...okButtonProps}>{okText}</Button>\n                    </div>\n                </div>\n            </div>\n        </aside>, document.body);\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Input } from 'antd';\nimport { observer } from 'mobx-react';\nimport Modal from '../modal';\n\n@observer\nclass HeaderAdd extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    state = {\n        modalVisible: false,\n    }\n    handleInputChange = value => {\n        console.log(value);\n        this.setState({ title: value });\n    }\n    submit = () => {\n        const { addIssue } = this.context.store;\n        const title = this.input.input.value;\n        addIssue({ title });\n        this.setState({ modalVisible: false });\n    }\n    render() {\n        const { modalVisible } = this.state;\n        return (\n            <>\n                <button onClick={() => this.setState({ modalVisible: true })}><Icon type=\"inbox\" /></button>\n                <Modal\n                    okText=\"Add\"\n                    visible={modalVisible}\n                    onCancel={() => this.setState({ modalVisible: false })}\n                    onOk={this.submit}\n                >\n                    <Input\n                        placeholder=\"Unnamed Task\"\n                        autoFocus\n                        ref={input => this.input = input}\n                    />\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default HeaderAdd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../../constants/menus';\nimport { goToIssue } from '../../helpers/remote';\nimport Add from './add';\nimport './index.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    toggleRightBar = () => {\n        const { rightBarCollapsed, setRightBarCollapse } = this.context.store;\n        setRightBarCollapse(!rightBarCollapsed);\n    }\n\n    goToGithub = () => {\n        const { selectedIssueNumber } = this.context.store;\n        if (selectedIssueNumber) {\n            goToIssue(selectedIssueNumber);\n        }\n    }\n\n    reload = () => {\n        const { loading, init } = this.context.store;\n        if (!loading) {\n            init();\n        }\n    }\n\n    render() {\n        const { sidebarCollapsed, selectedIssueNumber, loading } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<div className=\"left-buttons\">\n                <button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n                <button onClick={this.reload}><Icon type=\"reload\" data-is-loading={loading > 0} /></button>\n                <Add />\n            </div>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path} exact={menu.exact}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n            <div className=\"right-buttons\">\n                <button disabled={!selectedIssueNumber} onClick={this.goToGithub}><Icon type=\"github\" /></button>\n                <button onClick={this.toggleRightBar}><Icon type=\"info-circle\" /></button>\n            </div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport { REPO_URL } from '../helpers/remote';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    logout() {\n        localStorage.removeItem('issue-todo-token');\n        localStorage.removeItem('issue-todo-repo');\n        window.location.href = '/';\n    }\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path} exact={menu.exact}>{menu.node}</NavLink>\n                </div>)\n            }\n            <div className=\"login-info\">\n                <p className=\"logout\" onClick={this.logout}>repo:<Icon type=\"logout\" /></p>\n                <p className=\"repo-url\">{REPO_URL}</p>\n            </div>\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Empty, Tag, Input } from 'antd';\nimport moment from 'moment';\nimport { decideFontColor } from '../../helpers/util';\nimport './index.less';\n\nconst { CheckableTag } = Tag;\nconst { TextArea } = Input;\n\n@observer\nclass RightBar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    handleLabelChange = (label, checked) => {\n        const { updateIssue, selectedIssue } = this.context.store;\n        let { labels } = selectedIssue;\n        if (checked) {\n            labels = [...labels, label];\n        } else {\n            labels = labels.filter(o => o.name !== label.name);\n        }\n        updateIssue(selectedIssue.number, { labels });\n    }\n\n    handleTitleChange = () => {\n        const title = this.titleRef.textAreaRef.value;\n        const { updateIssue, selectedIssue } = this.context.store;\n        updateIssue(selectedIssue.number, { title });\n    }\n\n    render() {\n        const { rightBarCollapsed, selectedIssue, displayLabels } = this.context.store;\n        const { labels: selectedLabels, title, created_at: createdAt, updated_at: updatedAt } = selectedIssue || {};\n        return <div className=\"app-rightbar\" data-is-collapsed={rightBarCollapsed}>\n            {\n                selectedIssue\n                ? <div>\n                    <div className=\"app-rightbar-form-item\">\n                        <label>Title</label>\n                        <div className=\"app-rightbar-form-item-body\">\n                            <TextArea defaultValue={title} rows={4} onChange={this.handleTitleChange} ref={ref => this.titleRef = ref} />\n                        </div>\n                    </div>\n                    <div className=\"app-rightbar-form-item\">\n                        <label>Label</label>\n                        <div className=\"app-rightbar-form-item-body\">\n                            {\n                                displayLabels.map(label => <CheckableTag\n                                    key={label.id}\n                                    checked={selectedLabels.some(o => o.name === label.name)}\n                                    style={{\n                                        '--label-font-color': decideFontColor(label.color),\n                                        '--label-back-color': `#${label.color}`,\n                                    }}\n                                    onChange={checked => this.handleLabelChange(label, checked)}\n                                >\n                                    {label.name}\n                                </CheckableTag>)\n                            }\n                        </div>\n                    </div>\n                    <div className=\"app-rightbar-form-item\">\n                        <label>Date</label>\n                        <div className=\"app-rightbar-form-item-body\">\n                            Created At: {moment(createdAt).format('YYYY/MM/DD HH:mm')}\n                        </div>\n                        <div className=\"app-rightbar-form-item-body\">\n                            Updated At: {moment(updatedAt).format('YYYY/MM/DD HH:mm')}\n                        </div>\n                    </div>\n                </div>\n                : <Empty description=\"NO SELECTION\" />\n            }\n        </div>;\n    }\n}\n\nexport default RightBar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n        repo: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    onRepoChange = e => this.setState({ repo: e.target.value });\n    login = async () => {\n        const { token, repo } = this.state;\n        localStorage.setItem('issue-todo-token', token);\n        localStorage.setItem('issue-todo-repo', /^\\//.test(repo) ? repo : `/${repo}`);\n        window.location.href = '/';\n    }\n    render() {\n        const { token, repo } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"Login\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"GitHub API token\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <Input onChange={this.onRepoChange} value={repo} placeholder=\"Repo address, e.g: wangsijie/todo\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">GO</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport { observer } from 'mobx-react';\nimport { decideFontColor } from '../../helpers/util';\nimport './issue.less';\n\n@observer\nclass Issue extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    handleCheckBoxClick = () => {\n        const { issue } = this.props;\n        if (issue.$closed) {\n            return;\n        }\n        const { closeIssue } = this.context.store;\n        closeIssue(issue.number);\n    }\n    toggleFlag = () => {\n        const { issue } = this.props;\n        const { setIssueFlag } = this.context.store;\n        setIssueFlag(issue.number, !issue.$isImportant);\n    }\n    select = () => {\n        const { issue } = this.props;\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(issue.number);\n    }\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\" onClick={this.select} data-is-selected={issue.$selected}>\n                <div className=\"check-box\" onClick={this.handleCheckBoxClick} data-is-important={issue.$isImportant}>\n                    {issue.$closed && <div className=\"closed\" />}\n                </div>\n                <div className=\"main\">\n                    <div className=\"title\" data-is-closed={issue.$closed}>{issue.title}</div>\n                    <div className=\"labels\">\n                        {\n                            issue.$displayLabels.map(label => <div\n                                className=\"label\"\n                                key={label.id}\n                                style={{\n                                    backgroundColor: `#${label.color}`,\n                                    color: decideFontColor(label.color),\n                                }}\n                            >\n                                {label.name}\n                            </div>)\n                        }\n                    </div>\n                    <div className=\"flag\" onClick={this.toggleFlag}>\n                        <Icon type=\"flag\" theme={issue.$isImportant ? 'twoTone' : null} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Issue from './issue';\nimport './index.less';\n\n@observer\nclass IssueList extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    componentWillUnmount() {\n        this.clearSelection();\n    }\n    clearSelection = () => {\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(0);\n    }\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            <div className=\"ui-issue-list-body\">\n                {\n                    issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n                }\n            </div>\n            <div className=\"ui-issue-list-blank\" onClick={this.clearSelection}></div>\n        </div>\n    }\n}\n\nexport default IssueList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\nimport RightBar from './components/right-bar';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tif (isLogin()) {\n\t\t\tinit();\n\t\t}\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> Initializing...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<RightBar />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports.decideFontColor = background => {\n    const red = parseInt(background.substr(0, 2), 16);\n    const green = parseInt(background.substr(2, 2), 16);\n    const blue = parseInt(background.substr(4, 2), 16);\n    if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {\n        return '#000000';\n    }\n    return '#ffffff';\n};\n"],"sourceRoot":""}