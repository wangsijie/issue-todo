{"version":3,"sources":["helpers/util.js","helpers/loading.js","helpers/remote.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/modal/index.js","components/header/add.js","components/header/index.js","components/sidebar.js","components/right-bar/index.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","decideFontColor","background","parseInt","substr","hideIndicator","token","request","popRequest","API_ROOT","concat","REPO_ROOT","goToIssue","number","window","open","getHeaders","headers","Accept","localStorage","getItem","Authorization","$request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","payload","_ref2","_ref2$getData","getData","_ref2$hideLoading","hideLoading","_ref2$loadingText","loadingText","_ref2$throwException","throwException","_ref2$method","method","requestUrl","response","_args","arguments","wrap","_context","prev","next","length","undefined","text","message","loading","indexOf","keys","forEach","key","index","value","axios","put","sent","delete","post","patch","get","t0","abrupt","data","t1","error","String","stop","_x","_x2","apply","this","$get","options","$post","$patch","fetchIssues","issues","direction","closeIssue","_callee2","id","_context2","state","addIssue","_ref3","title","deleteLabel","name","issueNumber","$delete","isListLabel","label","test","description","store","_this","map","issue","objectSpread","$displayLabels","labels","filter","o","$isImportant","some","$selected","selectedIssueNumber","computedIssues","_this2","find","observable","computed","action","_this3","initState","_this4","sidebarCollapsed","_this5","rightBarCollapsed","_this6","$closed","fakeNumber","Date","getTime","_this7","push","_callee3","important","_args3","_context3","_this8","names","Array","isArray","toConsumableArray","_this9","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","exact","node","react_default","createElement","icon","type","Modal","visible","changing","prevProps","setTimeout","setState","_this$props","okText","onOk","onCancel","okButtonProps","_this$state","createPortal","className","data-is-hide","es_button","onClick","assign","document","body","nextProps","prevState","defaultProps","HeaderAdd","observer","modalVisible","handleInputChange","console","log","submit","context","input","Fragment","modal_Modal","placeholder","autoFocus","ref","contextTypes","Header","toggleSidebar","_this$context$store","setSidebarCollapse","toggleRightBar","_this$context$store2","setRightBarCollapse","goToGithub","_this$context$store3","add","react_router","menu","disabled","Sidebar","data-is-collapsed","react_router_dom","to","RightBar","selectedIssue","empty","Login","onTokenChange","e","target","login","setItem","location","href","card","onChange","Issue","handleCheckBoxClick","toggleFlag","setIssueFlag","select","setSelectedIssueNumber","data-is-selected","data-is-important","data-is-closed","style","backgroundColor","color","theme","IssueList","clearSelection","components_issue_list_issue","InboxPage","inboxIssues","components_issue_list","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","init","spin","size","components_header","components_sidebar","component","Inbox","NextAction","Important","List","components_right_bar","login_Login","React","Boolean","hostname","match","ReactDOM","render","provider_Provider","src_app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c7b86cc.chunk.js","sourcesContent":["module.exports.decideFontColor = background => {\n    const red = parseInt(background.substr(0, 2), 16);\n    const green = parseInt(background.substr(2, 2), 16);\n    const blue = parseInt(background.substr(4, 2), 16);\n    if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {\n        return '#000000';\n    }\n    return '#ffffff';\n};\n","import { message } from 'antd';\n\nlet hideIndicator;\nlet request = 0;\nexport const pushRequest = (text) => {\n    if (request++ === 0) {\n        hideIndicator = message.loading(text || 'LOADING', 0);\n    }\n};\n\nexport const popRequest = () => {\n    if (request-- === 1) {\n        hideIndicator();\n    }\n};","import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const REPO_URL = '/wangsijie/todo';\nexport const API_ROOT = `https://api.github.com/repos${REPO_URL}`;\nexport const REPO_ROOT = `https://github.com${REPO_URL}/issues`;\n\nexport const goToIssue = number => window.open(`${REPO_ROOT}/${number}`);\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET'\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    return !!token;\n};\n","import { $get, $patch, $post, $delete } from './remote';\n\nexport const fetchIssues = async () => {\n    const issues = await $get(`/issues`, { direction: 'asc' }, { hideLoading: true });\n    return issues;\n    // issues.forEach(issue => {\n    //     const meta = parseMeta(issue.body);\n    //     issue.meta = meta;\n    // });\n    // return issues.filter(issue => {\n    //     if (issue.meta.postpone && issue.meta.postpone.isAfter(moment())) {\n    //         return false;\n    //     }\n    //     return true;\n    // });\n};\n\nexport const fetchLabels = () => $get('/labels', {}, { hideLoading: true });\n\nexport const closeIssue = async (id) => $patch(`/issues/${id}`, { state: 'close' });\n\nexport const addIssue = ({ title }) => $post('/issues', { title });\n\nexport const addLabel = (names, issueNumber) => $post(\n    `/issues/${issueNumber}/labels`,\n    { labels: Array.isArray(names) ? names : [names] }\n);\n\nexport const deleteLabel = (name, issueNumber) => $delete(`/issues/${issueNumber}/labels/${name}`);\n","import {observable, action, computed} from 'mobx';\nimport { message } from 'antd';\nimport { fetchIssues, fetchLabels, closeIssue, addIssue, addLabel, deleteLabel } from '../helpers/github';\n\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n    @observable rightBarCollapsed = false;\n    @observable selectedIssueNumber = 0;\n\n    @computed get computedIssues() {\n        return this.issues.map(issue => {\n            return {\n                ...issue,\n                $displayLabels: issue.labels.filter(o => o.name !== 'important'),\n                $isImportant: issue.labels.some(o => o.name === 'important'),\n                $selected: issue.number === this.selectedIssueNumber,\n            };\n        });\n    }\n    \n    @computed get nextActionIssues() {\n        return this.computedIssues.filter(issue => {\n            if (!issue.$displayLabels.length) {\n                return false;\n            }\n            return !issue.$displayLabels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.computedIssues.filter(issue => issue.$displayLabels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.computedIssues.filter(issue => issue.$isImportant);\n    }\n\n    @computed get listIssues() {\n        return this.computedIssues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n    @computed get selectedIssue() {\n        return this.computedIssues.find(issue => issue.number === this.selectedIssueNumber);\n    }\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels;\n\n        this.initState = 'done';\n    }\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n\n    @action setRightBarCollapse = (value) => {\n        this.rightBarCollapsed = value;\n    }\n\n    @action closeIssue = (number) => {\n        const issue = this.issues.find(o => o.number === number);\n        if (!issue) {\n            return message.error('Issue not found: #' + number);\n        }\n        closeIssue(number);\n        this.issues = this.issues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            return {\n                ...issue,\n                $closed: true,\n            };\n        });\n    }\n\n    @action addIssue = async ({ title }) => {\n        const fakeNumber = new Date().getTime();\n        this.issues.push({\n            number: fakeNumber,\n            title,\n            labels: [],\n            $displayLabels: [],\n        });\n        const issue = await addIssue({ title });\n        this.issues = this.issues.map(o => {\n            if (o.number !== fakeNumber) {\n                return o;\n            }\n            return { ...o, ...issue };\n        });\n    }\n\n    @action setIssueFlag = async (number, important = true) => {\n        const label = this.labels.find(o => o.name === 'important');\n        this.issues = this.computedIssues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            if (important) {\n                if (issue.$isImportant) {\n                    return issue;\n                }\n                addLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: [...issue.labels, label],\n                };\n            } else {\n                if (!issue.$isImportant) {\n                    return issue;\n                }\n                deleteLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: issue.labels.filter(o => o.name !== 'important'),\n                };\n            }\n        });\n    }\n\n    @action setSelectedIssueNumber = number => this.selectedIssueNumber = number;\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/', exact: true, node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport './index.less';\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        okText: 'OK',\n        visible: false,\n        onCancel: () => {},\n        onOk: () => {},\n        okButtonProps: {},\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.changing && !prevState.visible && nextProps.visible) {\n            return {\n                changing: true,\n            };\n        }\n        if (!prevState.changing && prevState.visible && !nextProps.visible) {\n            return {\n                changing: true,\n                visible: false,\n            };\n        }\n        return null;\n    }\n    state = {\n        visible: false,\n        changing: false,\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.visible && this.props.visible) {\n            setTimeout(() => this.setState({ visible: true, changing: false }));\n        } else if (prevProps.visible && !this.props.visible) {\n            setTimeout(() => this.setState({ changing: false }), 280);\n        }\n    }\n    render() {\n        const { okText, onOk, onCancel, okButtonProps } = this.props;\n        const { visible, changing } = this.state;\n        if (!this.props.visible && !changing) {\n            return null;\n        }\n        return createPortal(<aside className=\"ui-modal-cover\">\n            <div className=\"cover\"></div>\n            <div className=\"window\">\n                <div className=\"window-shadow\" data-is-hide={!visible}>\n                    <div className=\"body\">{this.props.children}</div>\n                    <div className=\"footer\">\n                        <div className=\"blank\"></div>\n                        <Button onClick={onCancel}>Cancel</Button>\n                        <Button type=\"primary\" onClick={onOk} {...okButtonProps}>{okText}</Button>\n                    </div>\n                </div>\n            </div>\n        </aside>, document.body);\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Input } from 'antd';\nimport { observer } from 'mobx-react';\nimport Modal from '../modal';\n\n@observer\nclass HeaderAdd extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    state = {\n        modalVisible: false,\n    }\n    handleInputChange = value => {\n        console.log(value);\n        this.setState({ title: value });\n    }\n    submit = () => {\n        const { addIssue } = this.context.store;\n        const title = this.input.input.value;\n        addIssue({ title });\n        this.setState({ modalVisible: false });\n    }\n    render() {\n        const { modalVisible } = this.state;\n        return (\n            <>\n                <button onClick={() => this.setState({ modalVisible: true })}><Icon type=\"inbox\" /></button>\n                <Modal\n                    okText=\"Add\"\n                    visible={modalVisible}\n                    onCancel={() => this.setState({ modalVisible: false })}\n                    onOk={this.submit}\n                >\n                    <Input\n                        placeholder=\"Unnamed Task\"\n                        autoFocus\n                        ref={input => this.input = input}\n                    />\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default HeaderAdd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../../constants/menus';\nimport { goToIssue } from '../../helpers/remote';\nimport Add from './add';\nimport './index.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    toggleRightBar = () => {\n        const { rightBarCollapsed, setRightBarCollapse } = this.context.store;\n        setRightBarCollapse(!rightBarCollapsed);\n    }\n\n    goToGithub = () => {\n        const { selectedIssueNumber } = this.context.store;\n        if (selectedIssueNumber) {\n            goToIssue(selectedIssueNumber);\n        }\n    }\n\n    render() {\n        const { sidebarCollapsed, selectedIssueNumber } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<div className=\"left-buttons\">\n                <button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n                <button><Icon type=\"reload\" /></button>\n                <Add />\n            </div>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path} exact={menu.exact}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n            <div className=\"right-buttons\">\n                <button disabled={!selectedIssueNumber} onClick={this.goToGithub}><Icon type=\"github\" /></button>\n                <button onClick={this.toggleRightBar}><Icon type=\"info-circle\" /></button>\n            </div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path} exact={menu.exact}>{menu.node}</NavLink>\n                </div>)\n            }\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Empty } from 'antd';\nimport './index.less';\n\n@observer\nclass RightBar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    render() {\n        const { rightBarCollapsed, selectedIssue } = this.context.store;\n        return <div className=\"app-rightbar\" data-is-collapsed={rightBarCollapsed}>\n            {\n                selectedIssue\n                ? <div></div>\n                : <Empty description=\"NO SELECTION\" />\n            }\n        </div>;\n    }\n}\n\nexport default RightBar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    login = async () => {\n        const { token } = this.state;\n        localStorage.setItem('gist-token', token);\n        window.location.href = '/';\n    }\n    render() {\n        const { token } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"登陆\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"输入gist api token\" />\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">登陆</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport { observer } from 'mobx-react';\nimport { decideFontColor } from '../../helpers/util';\nimport './issue.less';\n\n@observer\nclass Issue extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    handleCheckBoxClick = () => {\n        const { issue } = this.props;\n        if (issue.$closed) {\n            return;\n        }\n        const { closeIssue } = this.context.store;\n        closeIssue(issue.number);\n    }\n    toggleFlag = () => {\n        const { issue } = this.props;\n        const { setIssueFlag } = this.context.store;\n        setIssueFlag(issue.number, !issue.$isImportant);\n    }\n    select = () => {\n        const { issue } = this.props;\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(issue.number);\n    }\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\" onClick={this.select} data-is-selected={issue.$selected}>\n                <div className=\"check-box\" onClick={this.handleCheckBoxClick} data-is-important={issue.$isImportant}>\n                    {issue.$closed && <div className=\"closed\" />}\n                </div>\n                <div className=\"main\">\n                    <div className=\"title\" data-is-closed={issue.$closed}>{issue.title}</div>\n                    <div className=\"labels\">\n                        {\n                            issue.$displayLabels.map(label => <div\n                                className=\"label\"\n                                key={label.id}\n                                style={{\n                                    backgroundColor: `#${label.color}`,\n                                    color: decideFontColor(label.color),\n                                }}\n                            >\n                                {label.name}\n                            </div>)\n                        }\n                    </div>\n                    <div className=\"flag\" onClick={this.toggleFlag}>\n                        <Icon type=\"flag\" theme={issue.$isImportant ? 'twoTone' : null} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Issue from './issue';\nimport './index.less';\n\n@observer\nclass IssueList extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    componentWillUnmount() {\n        this.clearSelection();\n    }\n    clearSelection = () => {\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(0);\n    }\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            <div className=\"ui-issue-list-body\">\n                {\n                    issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n                }\n            </div>\n            <div className=\"ui-issue-list-blank\" onClick={this.clearSelection}></div>\n        </div>\n    }\n}\n\nexport default IssueList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\nimport RightBar from './components/right-bar';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tinit();\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> 正在初始化...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<RightBar />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}