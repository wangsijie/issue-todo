{"version":3,"sources":["helpers/util.js","helpers/loading.js","helpers/remote.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/modal/index.js","components/header/add.js","components/header/index.js","components/sidebar.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","decideFontColor","background","parseInt","substr","hideIndicator","token","request","popRequest","API_ROOT","getHeaders","headers","Accept","localStorage","getItem","Authorization","concat","$request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","payload","_ref2","_ref2$getData","getData","_ref2$hideLoading","hideLoading","_ref2$loadingText","loadingText","_ref2$throwException","throwException","_ref2$method","method","requestUrl","response","_args","arguments","wrap","_context","prev","next","length","undefined","text","message","loading","indexOf","keys","forEach","key","index","value","axios","put","sent","delete","post","patch","get","t0","abrupt","data","t1","error","String","stop","_x","_x2","apply","this","$get","options","$post","$patch","fetchIssues","issues","direction","closeIssue","_callee2","id","_context2","state","addIssue","_ref3","title","deleteLabel","name","issueNumber","$delete","isListLabel","label","test","description","store","map","issue","objectSpread","$displayLabels","labels","filter","o","$isImportant","some","computedIssues","observable","action","_this","initState","_this2","sidebarCollapsed","number","_this3","find","$closed","fakeNumber","Date","getTime","_this4","push","_callee3","important","_args3","_context3","_this5","names","Array","isArray","toConsumableArray","computed","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","node","react_default","createElement","icon","type","Modal","visible","changing","prevProps","setTimeout","setState","_this$props","okText","onOk","onCancel","okButtonProps","_this$state","createPortal","className","data-is-hide","es_button","onClick","assign","document","body","nextProps","prevState","defaultProps","HeaderAdd","observer","modalVisible","handleInputChange","console","log","submit","context","input","Fragment","modal_Modal","placeholder","autoFocus","ref","contextTypes","Header","toggleSidebar","_this$context$store","setSidebarCollapse","add","react_router","menu","Sidebar","data-is-collapsed","react_router_dom","to","Login","onTokenChange","e","target","login","setItem","window","location","href","card","onChange","disabled","Issue","handleCheckBoxClick","toggleFlag","setIssueFlag","data-is-important","data-is-closed","style","backgroundColor","color","theme","IssueList","components_issue_list_issue","InboxPage","inboxIssues","issue_list_IssueList","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","init","spin","size","components_header","components_sidebar","exact","from","component","Inbox","NextAction","Important","List","login_Login","React","Boolean","hostname","match","ReactDOM","render","provider_Provider","src_app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a0ab118.chunk.js","sourcesContent":["module.exports.decideFontColor = background => {\n    const red = parseInt(background.substr(0, 2), 16);\n    const green = parseInt(background.substr(2, 2), 16);\n    const blue = parseInt(background.substr(4, 2), 16);\n    if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {\n        return '#000000';\n    }\n    return '#ffffff';\n};\n","import { message } from 'antd';\n\nlet hideIndicator;\nlet request = 0;\nexport const pushRequest = (text) => {\n    if (request++ === 0) {\n        hideIndicator = message.loading(text || 'LOADING', 0);\n    }\n};\n\nexport const popRequest = () => {\n    if (request-- === 1) {\n        hideIndicator();\n    }\n};","import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const API_ROOT = 'https://api.github.com/repos/wangsijie/todo';\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET'\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    return !!token;\n};\n","import { $get, $patch, $post, $delete } from './remote';\n\nexport const fetchIssues = async () => {\n    const issues = await $get(`/issues`, { direction: 'asc' }, { hideLoading: true });\n    return issues;\n    // issues.forEach(issue => {\n    //     const meta = parseMeta(issue.body);\n    //     issue.meta = meta;\n    // });\n    // return issues.filter(issue => {\n    //     if (issue.meta.postpone && issue.meta.postpone.isAfter(moment())) {\n    //         return false;\n    //     }\n    //     return true;\n    // });\n};\n\nexport const fetchLabels = () => $get('/labels', {}, { hideLoading: true });\n\nexport const closeIssue = async (id) => $patch(`/issues/${id}`, { state: 'close' });\n\nexport const addIssue = ({ title }) => $post('/issues', { title });\n\nexport const addLabel = (names, issueNumber) => $post(\n    `/issues/${issueNumber}/labels`,\n    { labels: Array.isArray(names) ? names : [names] }\n);\n\nexport const deleteLabel = (name, issueNumber) => $delete(`/issues/${issueNumber}/labels/${name}`);\n","import {observable, action, computed} from 'mobx';\nimport { message } from 'antd';\nimport { fetchIssues, fetchLabels, closeIssue, addIssue, addLabel, deleteLabel } from '../helpers/github';\n\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels;\n\n        this.initState = 'done';\n    }\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n\n    @action closeIssue = (number) => {\n        const issue = this.issues.find(o => o.number === number);\n        if (!issue) {\n            return message.error('Issue not found: #' + number);\n        }\n        closeIssue(number);\n        this.issues = this.issues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            return {\n                ...issue,\n                $closed: true,\n            };\n        });\n    }\n\n    @action addIssue = async ({ title }) => {\n        const fakeNumber = new Date().getTime();\n        this.issues.push({\n            number: fakeNumber,\n            title,\n            labels: [],\n            $displayLabels: [],\n        });\n        const issue = await addIssue({ title });\n        this.issues = this.issues.map(o => {\n            if (o.number !== fakeNumber) {\n                return o;\n            }\n            return { ...o, ...issue };\n        });\n    }\n\n    @action setIssueFlag = async (number, important = true) => {\n        const label = this.labels.find(o => o.name === 'important');\n        this.issues = this.computedIssues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            if (important) {\n                if (issue.$isImportant) {\n                    return issue;\n                }\n                addLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: [...issue.labels, label],\n                };\n            } else {\n                if (!issue.$isImportant) {\n                    return issue;\n                }\n                deleteLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: issue.labels.filter(o => o.name !== 'important'),\n                };\n            }\n        });\n    }\n\n    @computed get computedIssues() {\n        return this.issues.map(issue => {\n            return {\n                ...issue,\n                $displayLabels: issue.labels.filter(o => o.name !== 'important'),\n                $isImportant: issue.labels.some(o => o.name === 'important'),\n            };\n        });\n    }\n    \n    @computed get nextActionIssues() {\n        return this.computedIssues.filter(issue => {\n            if (!issue.labels.length) {\n                return false;\n            }\n            return !issue.labels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.computedIssues.filter(issue => issue.$displayLabels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.computedIssues.filter(issue => issue.$isImportant);\n    }\n\n    @computed get listIssues() {\n        return this.computedIssues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n//   @action addTodo = (todo) => { // 增\n//     this.todos = [...this.todos, todo]\n//   }\n\n//   @action deleteTodo = (id) => { // 删\n//     this.todos = this.todos.filter(item => {\n//       return item.id !== id\n//     })\n//   }\n\n//   @action completeTodo = (id) => { // 改\n//     this.todos = this.todos.map(item => {\n//       let obj = item.id === id ? {...item, isComplete: !item.isComplete} : item\n//       return obj\n//     })\n//   }\n\n//   @action searchTodo = (content) => { // 查\n//     if (content === '') {\n//       this.todos = list\n//     } else {\n//       this.todos = this.todos.filter(item => {\n//         return item.content.indexOf(content) !== -1\n//       })\n//     }\n//   }\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/inbox', node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport './index.less';\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        okText: 'OK',\n        visible: false,\n        onCancel: () => {},\n        onOk: () => {},\n        okButtonProps: {},\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.changing && !prevState.visible && nextProps.visible) {\n            return {\n                changing: true,\n            };\n        }\n        if (!prevState.changing && prevState.visible && !nextProps.visible) {\n            return {\n                changing: true,\n                visible: false,\n            };\n        }\n        return null;\n    }\n    state = {\n        visible: false,\n        changing: false,\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.visible && this.props.visible) {\n            setTimeout(() => this.setState({ visible: true, changing: false }));\n        } else if (prevProps.visible && !this.props.visible) {\n            setTimeout(() => this.setState({ changing: false }), 280);\n        }\n    }\n    render() {\n        const { okText, onOk, onCancel, okButtonProps } = this.props;\n        const { visible, changing } = this.state;\n        if (!this.props.visible && !changing) {\n            return null;\n        }\n        return createPortal(<aside className=\"ui-modal-cover\">\n            <div className=\"cover\"></div>\n            <div className=\"window\">\n                <div className=\"window-shadow\" data-is-hide={!visible}>\n                    <div className=\"body\">{this.props.children}</div>\n                    <div className=\"footer\">\n                        <div className=\"blank\"></div>\n                        <Button onClick={onCancel}>Cancel</Button>\n                        <Button type=\"primary\" onClick={onOk} {...okButtonProps}>{okText}</Button>\n                    </div>\n                </div>\n            </div>\n        </aside>, document.body);\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Input } from 'antd';\nimport { observer } from 'mobx-react';\nimport Modal from '../modal';\n\n@observer\nclass HeaderAdd extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    state = {\n        modalVisible: false,\n    }\n    handleInputChange = value => {\n        console.log(value);\n        this.setState({ title: value });\n    }\n    submit = () => {\n        const { addIssue } = this.context.store;\n        const title = this.input.input.value;\n        addIssue({ title });\n        this.setState({ modalVisible: false });\n    }\n    render() {\n        const { modalVisible } = this.state;\n        return (\n            <>\n                <button onClick={() => this.setState({ modalVisible: true })}><Icon type=\"inbox\" /></button>\n                <Modal\n                    okText=\"Add\"\n                    visible={modalVisible}\n                    onCancel={() => this.setState({ modalVisible: false })}\n                    onOk={this.submit}\n                >\n                    <Input\n                        placeholder=\"Unnamed Task\"\n                        autoFocus\n                        ref={input => this.input = input}\n                    />\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default HeaderAdd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../../constants/menus';\nimport Add from './add';\nimport './index.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<div className=\"left-buttons\">\n                <button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n                <button><Icon type=\"reload\" /></button>\n                <Add />\n            </div>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n            <div className=\"right-buttons\"></div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path}>{menu.node}</NavLink>\n                </div>)\n            }\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    login = async () => {\n        const { token } = this.state;\n        localStorage.setItem('gist-token', token);\n        window.location.href = '/';\n    }\n    render() {\n        const { token } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"登陆\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"输入gist api token\" />\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">登陆</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport { observer } from 'mobx-react';\nimport { decideFontColor } from '../../helpers/util';\nimport './issue.less';\n\n@observer\nclass Issue extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    handleCheckBoxClick = () => {\n        const { issue } = this.props;\n        if (issue.$closed) {\n            return;\n        }\n        const { closeIssue } = this.context.store;\n        closeIssue(issue.number);\n    }\n    toggleFlag = () => {\n        const { issue } = this.props;\n        const { setIssueFlag } = this.context.store;\n        setIssueFlag(issue.number, !issue.$isImportant);\n    }\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\">\n                <div className=\"check-box\" onClick={this.handleCheckBoxClick} data-is-important={issue.$isImportant}>\n                    {issue.$closed && <div className=\"closed\" />}\n                </div>\n                <div className=\"main\">\n                    <div className=\"title\" data-is-closed={issue.$closed}>{issue.title}</div>\n                    <div className=\"labels\">\n                        {\n                            issue.$displayLabels.map(label => <div\n                                className=\"label\"\n                                key={label.id}\n                                style={{\n                                    backgroundColor: `#${label.color}`,\n                                    color: decideFontColor(label.color),\n                                }}\n                            >\n                                {label.name}\n                            </div>)\n                        }\n                    </div>\n                    <div className=\"flag\" onClick={this.toggleFlag}>\n                        <Icon type=\"flag\" theme={issue.$isImportant ? 'twoTone' : null} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport Issue from './issue';\nimport './index.less';\n\nexport default class IssueList extends Component {\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            {\n                issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n            }\n        </div>\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\n// import Home from './pages/home';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tinit();\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> 正在初始化...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"/inbox\" />\n\t\t\t\t\t\t\t<Route path=\"/inbox\" component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}