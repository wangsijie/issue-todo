{"version":3,"sources":["helpers/loading.js","helpers/remote.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/header.js","components/sidebar.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js"],"names":["hideIndicator","token","request","popRequest","API_ROOT","getHeaders","headers","Accept","localStorage","getItem","Authorization","concat","$request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","payload","_ref2","_ref2$getData","getData","_ref2$hideLoading","hideLoading","_ref2$loadingText","loadingText","_ref2$throwException","throwException","_ref2$method","method","requestUrl","response","_args","arguments","wrap","_context","prev","next","length","undefined","text","message","loading","indexOf","keys","forEach","key","index","value","axios","put","sent","delete","post","patch","get","t0","abrupt","data","t1","error","String","stop","_x","_x2","apply","this","$get","options","fetchIssues","issues","direction","isListLabel","label","test","description","store","filter","issue","labels","some","name","observable","action","_this","initState","_this2","sidebarCollapsed","computed","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","node","react_default","createElement","icon","type","Header","observer","toggleSidebar","_this$context$store","context","setSidebarCollapse","className","onClick","react_router","map","menu","contextTypes","Sidebar","data-is-collapsed","react_router_dom","to","Login","state","onTokenChange","e","setState","target","login","setItem","window","location","href","card","title","input","onChange","placeholder","es_button","disabled","Issue","IssueList","components_issue_list_issue","number","InboxPage","inboxIssues","issue_list_IssueList","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","init","spin","size","components_header","components_sidebar","exact","component","Inbox","NextAction","Important","List","login_Login","React","Boolean","hostname","match","ReactDOM","render","provider_Provider","src_app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2081a4e.chunk.js","sourcesContent":["import { message } from 'antd';\n\nlet hideIndicator;\nlet request = 0;\nexport const pushRequest = (text) => {\n    if (request++ === 0) {\n        hideIndicator = message.loading(text || '正在加载', 0);\n    }\n};\n\nexport const popRequest = () => {\n    if (request-- === 1) {\n        hideIndicator();\n    }\n};","import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const API_ROOT = 'https://api.github.com/repos/wangsijie/todo';\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET'\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    return !!token;\n};\n","import { $get } from './remote';\n\nexport const fetchIssues = async () => {\n    const issues = await $get(`/issues`, { direction: 'asc' }, { hideLoading: true });\n    return issues;\n    // issues.forEach(issue => {\n    //     const meta = parseMeta(issue.body);\n    //     issue.meta = meta;\n    // });\n    // return issues.filter(issue => {\n    //     if (issue.meta.postpone && issue.meta.postpone.isAfter(moment())) {\n    //         return false;\n    //     }\n    //     return true;\n    // });\n};\n\nexport const fetchLabels = () => $get('/labels', {}, { hideLoading: true });\n","import {observable, action, computed} from 'mobx';\nimport { fetchIssues, fetchLabels } from '../helpers/github';\n\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels;\n\n        this.initState = 'done';\n    }\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n    \n    @computed get nextActionIssues() {\n        return this.issues.filter(issue => {\n            if (!issue.labels.length) {\n                return false;\n            }\n            return !issue.labels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.issues.filter(issue => issue.labels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.issues.filter(issue => issue.labels.some(label => label.name === 'important'));\n    }\n\n    @computed get listIssues() {\n        return this.issues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n//   @action addTodo = (todo) => { // 增\n//     this.todos = [...this.todos, todo]\n//   }\n\n//   @action deleteTodo = (id) => { // 删\n//     this.todos = this.todos.filter(item => {\n//       return item.id !== id\n//     })\n//   }\n\n//   @action completeTodo = (id) => { // 改\n//     this.todos = this.todos.map(item => {\n//       let obj = item.id === id ? {...item, isComplete: !item.isComplete} : item\n//       return obj\n//     })\n//   }\n\n//   @action searchTodo = (content) => { // 查\n//     if (content === '') {\n//       this.todos = list\n//     } else {\n//       this.todos = this.todos.filter(item => {\n//         return item.content.indexOf(content) !== -1\n//       })\n//     }\n//   }\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/inbox', node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../constants/menus';\nimport './header.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n\t\t\t<button><Icon type=\"reload\" /></button>\n\t\t\t<button><Icon type=\"inbox\" /></button>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path}>{menu.node}</NavLink>\n                </div>)\n            }\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    login = async () => {\n        const { token } = this.state;\n        localStorage.setItem('gist-token', token);\n        window.location.href = '/';\n    }\n    render() {\n        const { token } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"登陆\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"输入gist api token\" />\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">登陆</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport './issue.less';\n\nclass Issue extends Component {\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\">\n                <div className=\"check-box\"></div>\n                <div className=\"main\">\n                    <div className=\"title\">{issue.title}</div>\n                    <div className=\"flag\"><Icon type=\"flag\" /></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport Issue from './issue';\nimport './index.less';\n\nexport default class IssueList extends Component {\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            {\n                issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n            }\n        </div>\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\n// import Home from './pages/home';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tinit();\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> 正在初始化...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/inbox\" component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}