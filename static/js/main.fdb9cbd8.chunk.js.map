{"version":3,"sources":["helpers/remote.js","helpers/loading.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/modal/index.js","components/header/add.js","components/header/index.js","components/sidebar.js","components/right-bar/index.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js","helpers/util.js"],"names":["token","popRequest","store","popLoading","API_ROOT","concat","REPO_ROOT","goToIssue","number","window","open","getHeaders","headers","Accept","localStorage","getItem","Authorization","$request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","payload","_ref2","_ref2$getData","getData","_ref2$hideLoading","hideLoading","_ref2$loadingText","_ref2$throwException","throwException","_ref2$method","method","requestUrl","response","_args","arguments","wrap","_context","prev","next","length","undefined","loadingText","pushLoading","indexOf","keys","forEach","key","index","value","axios","put","sent","delete","post","patch","get","t0","abrupt","data","t1","message","error","String","stop","_x","_x2","apply","this","$get","options","$post","$patch","fetchIssues","issues","direction","_","Date","getTime","closeIssue","_callee2","id","_context2","state","addIssue","_ref3","title","deleteLabel","name","issueNumber","$delete","updateIssueLabels","labels","$put","map","label","isListLabel","test","description","filter","o","_this","issue","objectSpread","$displayLabels","$isImportant","some","$selected","selectedIssueNumber","computedIssues","_this2","find","observable","computed","action","_this3","initState","_this4","loading","_this5","_this6","sidebarCollapsed","_this7","rightBarCollapsed","_this8","$closed","fakeNumber","_this9","push","_callee3","important","_args3","_context3","_this10","names","Array","isArray","toConsumableArray","_this11","_this12","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","exact","node","react_default","createElement","icon","type","Modal","visible","changing","prevProps","setTimeout","setState","_this$props","okText","onOk","onCancel","okButtonProps","_this$state","createPortal","className","data-is-hide","es_button","onClick","assign","document","body","nextProps","prevState","defaultProps","HeaderAdd","observer","modalVisible","handleInputChange","console","log","submit","context","input","Fragment","modal_Modal","placeholder","autoFocus","ref","contextTypes","Header","toggleSidebar","_this$context$store","setSidebarCollapse","toggleRightBar","_this$context$store2","setRightBarCollapse","goToGithub","reload","_this$context$store3","init","_this$context$store4","data-is-loading","add","react_router","menu","disabled","Sidebar","data-is-collapsed","react_router_dom","to","CheckableTag","RightBar","handleLabelChange","checked","updateIssue","selectedIssue","displayLabels","selectedLabels","style","--label-font-color","decideFontColor","color","--label-back-color","onChange","empty","Login","onTokenChange","e","target","login","setItem","location","href","card","Issue","handleCheckBoxClick","toggleFlag","setIssueFlag","select","setSelectedIssueNumber","data-is-selected","data-is-important","data-is-closed","backgroundColor","theme","IssueList","clearSelection","components_issue_list_issue","InboxPage","inboxIssues","components_issue_list","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","spin","size","components_header","components_sidebar","component","Inbox","NextAction","Important","List","components_right_bar","login_Login","React","Boolean","hostname","match","ReactDOM","render","provider_Provider","src_app","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","background","parseInt","substr"],"mappings":"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","file":"static/js/main.fdb9cbd8.chunk.js","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const REPO_URL = '/wangsijie/todo';\nexport const API_ROOT = `https://api.github.com/repos${REPO_URL}`;\nexport const REPO_ROOT = `https://github.com${REPO_URL}/issues`;\n\nexport const goToIssue = number => window.open(`${REPO_ROOT}/${number}`);\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET'\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('gist-token');\n    }\n    return !!token;\n};\n","import store from '../store';\n\nexport const pushRequest = () => {\n    store.pushLoading();\n};\n\nexport const popRequest = () => {\n    store.popLoading();\n};","import { $get, $patch, $post, $delete, $put } from './remote';\n\nexport const fetchIssues = async () => {\n    const issues = await $get(`/issues`, { direction: 'asc', _: new Date().getTime() });\n    return issues;\n    // issues.forEach(issue => {\n    //     const meta = parseMeta(issue.body);\n    //     issue.meta = meta;\n    // });\n    // return issues.filter(issue => {\n    //     if (issue.meta.postpone && issue.meta.postpone.isAfter(moment())) {\n    //         return false;\n    //     }\n    //     return true;\n    // });\n};\n\nexport const fetchLabels = () => $get(`/labels`, { _: new Date().getTime() });\n\nexport const closeIssue = async (id) => $patch(`/issues/${id}`, { state: 'close' });\n\nexport const addIssue = ({ title }) => $post('/issues', { title });\n\nexport const addLabel = (names, issueNumber) => $post(\n    `/issues/${issueNumber}/labels`,\n    { labels: Array.isArray(names) ? names : [names] }\n);\n\nexport const deleteLabel = (name, issueNumber) => $delete(`/issues/${issueNumber}/labels/${name}`);\n\nexport const updateIssueLabels = (number, labels) => $put(\n    `/issues/${number}/labels`,\n    {\n        labels: labels.map(label => label.name),\n    }\n);\n","import {observable, action, computed} from 'mobx';\nimport { message } from 'antd';\nimport {\n    fetchIssues, fetchLabels, closeIssue, addIssue, addLabel, deleteLabel,\n    updateIssueLabels,\n} from '../helpers/github';\n\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n    @observable rightBarCollapsed = false;\n    @observable selectedIssueNumber = 0;\n    @observable loading = false;\n\n    @computed get displayLabels() {\n        return this.labels.filter(o => o.name !== 'important');\n    }\n\n    @computed get computedIssues() {\n        return this.issues.map(issue => {\n            return {\n                ...issue,\n                $displayLabels: issue.labels.filter(o => o.name !== 'important'),\n                $isImportant: issue.labels.some(o => o.name === 'important'),\n                $selected: issue.number === this.selectedIssueNumber,\n            };\n        });\n    }\n    \n    @computed get nextActionIssues() {\n        return this.computedIssues.filter(issue => {\n            if (!issue.$displayLabels.length) {\n                return false;\n            }\n            return !issue.$displayLabels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.computedIssues.filter(issue => issue.$displayLabels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.computedIssues.filter(issue => issue.$isImportant);\n    }\n\n    @computed get listIssues() {\n        return this.computedIssues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n    @computed get selectedIssue() {\n        return this.computedIssues.find(issue => issue.number === this.selectedIssueNumber);\n    }\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels;\n\n        this.initState = 'done';\n    }\n\n    @action pushLoading = () => this.loading++;\n    @action popLoading = () => this.loading--;\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n\n    @action setRightBarCollapse = (value) => {\n        this.rightBarCollapsed = value;\n    }\n\n    @action closeIssue = (number) => {\n        const issue = this.issues.find(o => o.number === number);\n        if (!issue) {\n            return message.error('Issue not found: #' + number);\n        }\n        closeIssue(number);\n        this.issues = this.issues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            return {\n                ...issue,\n                $closed: true,\n            };\n        });\n    }\n\n    @action addIssue = async ({ title }) => {\n        const fakeNumber = new Date().getTime();\n        this.issues.push({\n            number: fakeNumber,\n            title,\n            labels: [],\n            $displayLabels: [],\n        });\n        const issue = await addIssue({ title });\n        this.issues = this.issues.map(o => {\n            if (o.number !== fakeNumber) {\n                return o;\n            }\n            return { ...o, ...issue };\n        });\n    }\n\n    @action setIssueFlag = async (number, important = true) => {\n        const label = this.labels.find(o => o.name === 'important');\n        this.issues = this.computedIssues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            if (important) {\n                if (issue.$isImportant) {\n                    return issue;\n                }\n                addLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: [...issue.labels, label],\n                };\n            } else {\n                if (!issue.$isImportant) {\n                    return issue;\n                }\n                deleteLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: issue.labels.filter(o => o.name !== 'important'),\n                };\n            }\n        });\n    }\n\n    @action setSelectedIssueNumber = number => this.selectedIssueNumber = number;\n\n    @action updateIssue = (number, data) => {\n        this.issues = this.issues.map(issue => {\n            if (issue.number === number) {\n                if (data.labels) {\n                    updateIssueLabels(number, data.labels);\n                }\n                return { ...issue, ...data };\n            }\n            return issue;\n        });\n    }\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/', exact: true, node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport './index.less';\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        okText: 'OK',\n        visible: false,\n        onCancel: () => {},\n        onOk: () => {},\n        okButtonProps: {},\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.changing && !prevState.visible && nextProps.visible) {\n            return {\n                changing: true,\n            };\n        }\n        if (!prevState.changing && prevState.visible && !nextProps.visible) {\n            return {\n                changing: true,\n                visible: false,\n            };\n        }\n        return null;\n    }\n    state = {\n        visible: false,\n        changing: false,\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.visible && this.props.visible) {\n            setTimeout(() => this.setState({ visible: true, changing: false }));\n        } else if (prevProps.visible && !this.props.visible) {\n            setTimeout(() => this.setState({ changing: false }), 280);\n        }\n    }\n    render() {\n        const { okText, onOk, onCancel, okButtonProps } = this.props;\n        const { visible, changing } = this.state;\n        if (!this.props.visible && !changing) {\n            return null;\n        }\n        return createPortal(<aside className=\"ui-modal-cover\">\n            <div className=\"cover\"></div>\n            <div className=\"window\">\n                <div className=\"window-shadow\" data-is-hide={!visible}>\n                    <div className=\"body\">{this.props.children}</div>\n                    <div className=\"footer\">\n                        <div className=\"blank\"></div>\n                        <Button onClick={onCancel}>Cancel</Button>\n                        <Button type=\"primary\" onClick={onOk} {...okButtonProps}>{okText}</Button>\n                    </div>\n                </div>\n            </div>\n        </aside>, document.body);\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Input } from 'antd';\nimport { observer } from 'mobx-react';\nimport Modal from '../modal';\n\n@observer\nclass HeaderAdd extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    state = {\n        modalVisible: false,\n    }\n    handleInputChange = value => {\n        console.log(value);\n        this.setState({ title: value });\n    }\n    submit = () => {\n        const { addIssue } = this.context.store;\n        const title = this.input.input.value;\n        addIssue({ title });\n        this.setState({ modalVisible: false });\n    }\n    render() {\n        const { modalVisible } = this.state;\n        return (\n            <>\n                <button onClick={() => this.setState({ modalVisible: true })}><Icon type=\"inbox\" /></button>\n                <Modal\n                    okText=\"Add\"\n                    visible={modalVisible}\n                    onCancel={() => this.setState({ modalVisible: false })}\n                    onOk={this.submit}\n                >\n                    <Input\n                        placeholder=\"Unnamed Task\"\n                        autoFocus\n                        ref={input => this.input = input}\n                    />\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default HeaderAdd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../../constants/menus';\nimport { goToIssue } from '../../helpers/remote';\nimport Add from './add';\nimport './index.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    toggleRightBar = () => {\n        const { rightBarCollapsed, setRightBarCollapse } = this.context.store;\n        setRightBarCollapse(!rightBarCollapsed);\n    }\n\n    goToGithub = () => {\n        const { selectedIssueNumber } = this.context.store;\n        if (selectedIssueNumber) {\n            goToIssue(selectedIssueNumber);\n        }\n    }\n\n    reload = () => {\n        const { loading, init } = this.context.store;\n        if (!loading) {\n            init();\n        }\n    }\n\n    render() {\n        const { sidebarCollapsed, selectedIssueNumber, loading } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<div className=\"left-buttons\">\n                <button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n                <button onClick={this.reload}><Icon type=\"reload\" data-is-loading={loading > 0} /></button>\n                <Add />\n            </div>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path} exact={menu.exact}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n            <div className=\"right-buttons\">\n                <button disabled={!selectedIssueNumber} onClick={this.goToGithub}><Icon type=\"github\" /></button>\n                <button onClick={this.toggleRightBar}><Icon type=\"info-circle\" /></button>\n            </div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path} exact={menu.exact}>{menu.node}</NavLink>\n                </div>)\n            }\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Empty, Tag } from 'antd';\nimport { decideFontColor } from '../../helpers/util';\nimport './index.less';\n\nconst { CheckableTag } = Tag;\n\n@observer\nclass RightBar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    handleLabelChange = (label, checked) => {\n        const { updateIssue, selectedIssue } = this.context.store;\n        let { labels } = selectedIssue;\n        if (checked) {\n            labels = [...labels, label];\n        } else {\n            labels = labels.filter(o => o.name !== label.name);\n        }\n        updateIssue(selectedIssue.number, { labels });\n    }\n\n    render() {\n        const { rightBarCollapsed, selectedIssue, displayLabels } = this.context.store;\n        const { labels: selectedLabels } = selectedIssue || {};\n        return <div className=\"app-rightbar\" data-is-collapsed={rightBarCollapsed}>\n            {\n                selectedIssue\n                ? <div>\n                    <div className=\"app-rightbar-form-item\">\n                        <label>Label</label>\n                        <div className=\"app-rightbar-form-item-body\">\n                            {\n                                displayLabels.map(label => <CheckableTag\n                                    key={label.id}\n                                    checked={selectedLabels.some(o => o.name === label.name)}\n                                    style={{\n                                        '--label-font-color': decideFontColor(label.color),\n                                        '--label-back-color': `#${label.color}`,\n                                    }}\n                                    onChange={checked => this.handleLabelChange(label, checked)}\n                                >\n                                    {label.name}\n                                </CheckableTag>)\n                            }\n                        </div>\n                    </div>\n                </div>\n                : <Empty description=\"NO SELECTION\" />\n            }\n        </div>;\n    }\n}\n\nexport default RightBar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    login = async () => {\n        const { token } = this.state;\n        localStorage.setItem('gist-token', token);\n        window.location.href = '/';\n    }\n    render() {\n        const { token } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"登陆\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"输入gist api token\" />\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">登陆</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport { observer } from 'mobx-react';\nimport { decideFontColor } from '../../helpers/util';\nimport './issue.less';\n\n@observer\nclass Issue extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    handleCheckBoxClick = () => {\n        const { issue } = this.props;\n        if (issue.$closed) {\n            return;\n        }\n        const { closeIssue } = this.context.store;\n        closeIssue(issue.number);\n    }\n    toggleFlag = () => {\n        const { issue } = this.props;\n        const { setIssueFlag } = this.context.store;\n        setIssueFlag(issue.number, !issue.$isImportant);\n    }\n    select = () => {\n        const { issue } = this.props;\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(issue.number);\n    }\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\" onClick={this.select} data-is-selected={issue.$selected}>\n                <div className=\"check-box\" onClick={this.handleCheckBoxClick} data-is-important={issue.$isImportant}>\n                    {issue.$closed && <div className=\"closed\" />}\n                </div>\n                <div className=\"main\">\n                    <div className=\"title\" data-is-closed={issue.$closed}>{issue.title}</div>\n                    <div className=\"labels\">\n                        {\n                            issue.$displayLabels.map(label => <div\n                                className=\"label\"\n                                key={label.id}\n                                style={{\n                                    backgroundColor: `#${label.color}`,\n                                    color: decideFontColor(label.color),\n                                }}\n                            >\n                                {label.name}\n                            </div>)\n                        }\n                    </div>\n                    <div className=\"flag\" onClick={this.toggleFlag}>\n                        <Icon type=\"flag\" theme={issue.$isImportant ? 'twoTone' : null} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Issue from './issue';\nimport './index.less';\n\n@observer\nclass IssueList extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    componentWillUnmount() {\n        this.clearSelection();\n    }\n    clearSelection = () => {\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(0);\n    }\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            <div className=\"ui-issue-list-body\">\n                {\n                    issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n                }\n            </div>\n            <div className=\"ui-issue-list-blank\" onClick={this.clearSelection}></div>\n        </div>\n    }\n}\n\nexport default IssueList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\nimport RightBar from './components/right-bar';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tinit();\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> 正在初始化...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<RightBar />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports.decideFontColor = background => {\n    const red = parseInt(background.substr(0, 2), 16);\n    const green = parseInt(background.substr(2, 2), 16);\n    const blue = parseInt(background.substr(4, 2), 16);\n    if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {\n        return '#000000';\n    }\n    return '#ffffff';\n};\n"],"sourceRoot":""}