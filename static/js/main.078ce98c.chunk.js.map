{"version":3,"sources":["helpers/remote.js","helpers/loading.js","helpers/github.js","store/index.js","provider.js","constants/menus.js","components/modal/index.js","components/header/add.js","components/header/index.js","components/sidebar.js","components/right-bar/index.js","pages/login.js","components/issue-list/issue.js","components/issue-list/index.js","pages/inbox/index.js","pages/next-action/index.js","pages/list/index.js","pages/important/index.js","app.js","serviceWorker.js","index.js","helpers/util.js"],"names":["token","popRequest","store","popLoading","REPO_URL","localStorage","getItem","API_ROOT","concat","REPO_ROOT","goToIssue","number","window","open","getHeaders","headers","Accept","Authorization","$request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","payload","_ref2","_ref2$getData","getData","_ref2$hideLoading","hideLoading","_ref2$loadingText","_ref2$throwException","throwException","_ref2$method","method","_ref2$headerLink","headerLink","requestUrl","response","_args","arguments","wrap","_context","prev","next","length","undefined","loadingText","pushLoading","indexOf","keys","forEach","key","index","value","axios","put","sent","delete","post","patch","get","t0","abrupt","data","link","t1","message","error","String","stop","_x","_x2","apply","this","$get","options","$post","$patch","isLogin","fetchIssues","result","page","_ref3","issues","pageFinder","direction","_","Date","getTime","slicedToArray","toConsumableArray","exec","includes","status","removeItem","location","reload","closeIssue","_ref4","_callee2","id","_context2","state","addIssue","_ref5","title","deleteLabel","name","issueNumber","$delete","updateIssueLabels","labels","$put","map","label","updateIssue","debounce","isListLabel","test","description","filter","o","_this","issue","objectSpread","$displayLabels","$isImportant","some","$selected","selectedIssueNumber","computedIssues","_this2","find","observable","computed","action","_this3","initState","_this4","loading","_this5","_this6","sidebarCollapsed","_this7","rightBarCollapsed","_this8","$closed","fakeNumber","_this9","push","_callee3","important","_args3","_context3","_this10","names","Array","isArray","_this11","_this12","Provider","props","children","Component","childContextTypes","PropTypes","object","menus","path","exact","node","react_default","createElement","icon","type","Modal","visible","changing","prevProps","setTimeout","setState","_this$props","okText","onOk","onCancel","okButtonProps","_this$state","createPortal","className","data-is-hide","es_button","onClick","assign","document","body","nextProps","prevState","defaultProps","HeaderAdd","observer","modalVisible","handleInputChange","submit","context","input","Fragment","modal_Modal","placeholder","autoFocus","ref","onPressEnter","contextTypes","Header","toggleSidebar","_this$context$store","setSidebarCollapse","toggleRightBar","_this$context$store2","setRightBarCollapse","goToGithub","_this$context$store3","init","_this$context$store4","data-is-loading","add","react_router","menu","disabled","Sidebar","href","data-is-collapsed","react_router_dom","to","logout","CheckableTag","TextArea","RightBar","handleLabelChange","checked","selectedIssue","handleTitleChange","titleRef","textAreaRef","displayLabels","selectedLabels","createdAt","created_at","updatedAt","updated_at","defaultValue","rows","onChange","style","--label-font-color","decideFontColor","color","--label-back-color","moment","format","empty","Login","repo","onTokenChange","e","target","onRepoChange","login","setItem","_this$state2","card","Issue","handleCheckBoxClick","toggleFlag","setIssueFlag","select","setSelectedIssueNumber","data-is-selected","data-is-important","data-is-closed","backgroundColor","theme","IssueList","clearSelection","components_issue_list_issue","InboxPage","inboxIssues","components_issue_list","NextActionPage","nextActionIssues","ListPage","listIssues","ImportantPage","importantIssues","App","spin","size","components_header","components_sidebar","component","Inbox","NextAction","Important","List","components_right_bar","login_Login","React","Boolean","hostname","match","ReactDOM","render","provider_Provider","src_app","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","background","parseInt","substr"],"mappings":"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","file":"static/js/main.078ce98c.chunk.js","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nimport { pushRequest, popRequest } from './loading';\n\nexport const REPO_URL = localStorage.getItem('issue-todo-repo');\nexport const API_ROOT = REPO_URL && `https://api.github.com/repos${REPO_URL}`;\nexport const REPO_ROOT = REPO_URL && `https://github.com${REPO_URL}/issues`;\n\nexport const goToIssue = number => window.open(`${REPO_ROOT}/${number}`);\n\nlet token;\n\nexport const getHeaders = () => {\n    const headers = {\n        Accept: 'application/vnd.github.symmetra-preview+json',\n    };\n    if (!token) {\n        token = localStorage.getItem('issue-todo-token');\n    }\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return headers;\n};\n\nexport const $request = async (\n    endpoint,\n    payload,\n    {\n        getData = {},\n        hideLoading = false,\n        loadingText = null,\n        throwException = false,\n        method = 'GET',\n        headerLink = false,\n    } = {}\n) => {\n    try {\n        if (!hideLoading) {\n            pushRequest(loadingText);\n        }\n\n        let requestUrl =\n            endpoint.indexOf(API_ROOT) === -1\n                ? API_ROOT + endpoint\n                : endpoint;\n        Object.keys(getData).forEach((key, index) => {\n            const value = getData[key];\n            if (value === undefined) {\n                return;\n            }\n            requestUrl += (index === 0 ? '?' : '&') + `${key}=${value}`;\n        });\n        let response;\n        const headers = getHeaders();\n        try {\n            if (method === 'PUT') {\n                response = await axios.put(requestUrl, payload, { headers });\n            } else if (method === 'DELETE') {\n                response = await axios.delete(requestUrl, { headers });\n            } else if (method === 'POST') {\n                response = await axios.post(requestUrl, payload, { headers });\n            } else if (method === 'PATCH') {\n                response = await axios.patch(requestUrl, payload, { headers });\n            } else {\n                response = await axios.get(requestUrl, { headers });\n            }\n            if (!hideLoading) {\n                popRequest();\n            }\n        } catch (e) {\n            if (!hideLoading) {\n                popRequest();\n            }\n            throw e;\n        }\n\n        if (headerLink) {\n            return [response.data, response.headers.link];\n        }\n\n        return response.data;\n    } catch (e) {\n        if (throwException === true) {\n            throw e;\n        } else if (e.message === 'Request failed with status code 401' || e.message === 'Request failed with status code 403') {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n            // localStorage.removeItem('token');\n            // window.location.href = `${process.env.REACT_APP_SUB_DIRECTORY}/login`;\n        } else {\n            message.error((e.response && e.response.data && e.response.data.message) || String(e));\n        }\n    }\n}\n\nexport const $get = (endpoint, payload, options = {}) => {\n    options.getData = payload;\n    return $request(endpoint, null, options);\n}\nexport const $put = (endpoint, payload, options = {}) => {\n    options.method = 'PUT';\n    return $request(endpoint, payload, options);\n}\nexport const $post = (endpoint, payload, options = {}) => {\n    options.method = 'POST';\n    return $request(endpoint, payload, options);\n}\nexport const $patch = (endpoint, payload, options = {}) => {\n    options.method = 'PATCH';\n    return $request(endpoint, payload, options);\n}\nexport const $delete = (endpoint, payload, options = {}) => {\n    options.method = 'DELETE';\n    return $request(endpoint, payload, options);\n}\nexport const $upload = (endpoint, payload, options) => {\n    const formData = new FormData();\n    Object.keys(payload).forEach(key => formData.append(key, payload[key]));\n    return $post(endpoint, formData, options);\n}\nexport const isLogin = () => {\n    if (!token) {\n        token = localStorage.getItem('issue-todo-token');\n    }\n    return !!token;\n};\n","import store from '../store';\n\nexport const pushRequest = () => {\n    store.pushLoading();\n};\n\nexport const popRequest = () => {\n    store.popLoading();\n};","import { $get, $patch, $post, $delete, $put } from './remote';\n\nexport const fetchIssues = async () => {\n    try {\n        let result = [];\n        let page = 1;\n        while (true) {\n            const [issues, link] = await $get(\n                `/issues`,\n                { direction: 'asc', _: new Date().getTime(), page },\n                { throwException: true, headerLink: true }\n            );\n            result = [...result, ...issues];\n            const pageFinder = /&page=(\\d)>;\\srel=\"next\"/.exec(link);\n            if (pageFinder) {\n                page = pageFinder[1];\n            } else {\n                break;\n            }\n        }\n        return result;\n    } catch (e) {\n        if (e.response && [401, 404].includes(e.response.status)) {\n            localStorage.removeItem('issue-todo-token');\n            localStorage.removeItem('issue-todo-repo');\n            window.location.reload();\n        } else {\n            throw e;\n        }\n    }\n    // issues.forEach(issue => {\n    //     const meta = parseMeta(issue.body);\n    //     issue.meta = meta;\n    // });\n    // return issues.filter(issue => {\n    //     if (issue.meta.postpone && issue.meta.postpone.isAfter(moment())) {\n    //         return false;\n    //     }\n    //     return true;\n    // });\n};\n\nexport const fetchLabels = () => $get(`/labels`, { _: new Date().getTime() });\n\nexport const closeIssue = async (id) => $patch(`/issues/${id}`, { state: 'close' });\n\nexport const addIssue = ({ title }) => $post('/issues', { title });\n\nexport const addLabel = (names, issueNumber) => $post(\n    `/issues/${issueNumber}/labels`,\n    { labels: Array.isArray(names) ? names : [names] }\n);\n\nexport const deleteLabel = (name, issueNumber) => $delete(`/issues/${issueNumber}/labels/${name}`);\n\nexport const updateIssueLabels = (number, labels) => $put(\n    `/issues/${number}/labels`,\n    {\n        labels: labels.map(label => label.name),\n    }\n);\n\nexport const updateIssue = (number, data) => $patch(\n    `/issues/${number}`,\n    data,\n);\n","import {observable, action, computed} from 'mobx';\nimport { message } from 'antd';\nimport _ from 'lodash';\nimport {\n    fetchIssues, fetchLabels, closeIssue, addIssue, addLabel, deleteLabel,\n    updateIssueLabels, updateIssue as _updateIssue,\n} from '../helpers/github';\n\nconst updateIssue = _.debounce(_updateIssue, 1000);\nconst isListLabel = label => /\\[list\\]/.test(label.description);\n\nclass Store {\n    @observable issues = [];\n    @observable labels = [];\n    @observable initState = 'pending'; // \"pending\" / \"done\" / \"error\"\n    @observable sidebarCollapsed = false;\n    @observable rightBarCollapsed = false;\n    @observable selectedIssueNumber = 0;\n    @observable loading = false;\n\n    @computed get displayLabels() {\n        return this.labels.filter(o => o.name !== 'important');\n    }\n\n    @computed get computedIssues() {\n        return this.issues.map(issue => {\n            return {\n                ...issue,\n                $displayLabels: issue.labels.filter(o => o.name !== 'important'),\n                $isImportant: issue.labels.some(o => o.name === 'important'),\n                $selected: issue.number === this.selectedIssueNumber,\n            };\n        });\n    }\n    \n    @computed get nextActionIssues() {\n        return this.computedIssues.filter(issue => {\n            if (!issue.$displayLabels.length) {\n                return false;\n            }\n            return !issue.$displayLabels.some(isListLabel);\n        });\n    }\n\n    @computed get inboxIssues() {\n        return this.computedIssues.filter(issue => issue.$displayLabels.length === 0);\n    }\n\n    @computed get importantIssues() {\n        return this.computedIssues.filter(issue => issue.$isImportant);\n    }\n\n    @computed get listIssues() {\n        return this.computedIssues.filter(issue => issue.labels.some(isListLabel));\n    }\n\n    @computed get selectedIssue() {\n        return this.computedIssues.find(issue => issue.number === this.selectedIssueNumber);\n    }\n\n    @action\n    init = async () => {\n        const issues = await fetchIssues();\n        this.issues = issues;\n\n        const labels = await fetchLabels();\n        this.labels = labels;\n\n        this.initState = 'done';\n    }\n\n    @action pushLoading = () => this.loading++;\n    @action popLoading = () => this.loading--;\n\n    @action setSidebarCollapse = (value) => {\n        this.sidebarCollapsed = value;\n    }\n\n    @action setRightBarCollapse = (value) => {\n        this.rightBarCollapsed = value;\n    }\n\n    @action closeIssue = (number) => {\n        const issue = this.issues.find(o => o.number === number);\n        if (!issue) {\n            return message.error('Issue not found: #' + number);\n        }\n        closeIssue(number);\n        this.issues = this.issues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            return {\n                ...issue,\n                $closed: true,\n            };\n        });\n    }\n\n    @action addIssue = async ({ title }) => {\n        const fakeNumber = new Date().getTime();\n        this.issues.push({\n            number: fakeNumber,\n            title,\n            labels: [],\n            $displayLabels: [],\n        });\n        const issue = await addIssue({ title });\n        this.issues = this.issues.map(o => {\n            if (o.number !== fakeNumber) {\n                return o;\n            }\n            return { ...o, ...issue };\n        });\n    }\n\n    @action setIssueFlag = async (number, important = true) => {\n        const label = this.labels.find(o => o.name === 'important');\n        this.issues = this.computedIssues.map(issue => {\n            if (issue.number !== number) {\n                return issue;\n            }\n            if (important) {\n                if (issue.$isImportant) {\n                    return issue;\n                }\n                addLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: [...issue.labels, label],\n                };\n            } else {\n                if (!issue.$isImportant) {\n                    return issue;\n                }\n                deleteLabel(label.name, issue.number);\n                return {\n                    ...issue,\n                    labels: issue.labels.filter(o => o.name !== 'important'),\n                };\n            }\n        });\n    }\n\n    @action setSelectedIssueNumber = number => this.selectedIssueNumber = number;\n\n    @action updateIssue = (number, data) => {\n        this.issues = this.issues.map(issue => {\n            if (issue.number === number) {\n                if (data.labels) {\n                    updateIssueLabels(number, data.labels);\n                } else {\n                    updateIssue(number, data);\n                }\n                return { ...issue, ...data };\n            }\n            return issue;\n        });\n    }\n}\n\nexport default new Store();\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Provider extends Component {\n\n    static propTypes = {\n        store: PropTypes.object.isRequired,\n    };\n\n    static childContextTypes = {\n        store: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            store: this.props.store,\n        };\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n","import React from 'react';\nimport { Icon } from 'antd';\n\nexport const menus = [\n    { path: '/', exact: true, node: <span><Icon type=\"inbox\" /> Inbox</span> },\n    { path: '/next-action', node: <span><Icon type=\"carry-out\" /> Next Action</span> },\n    { path: '/important', node: <span><Icon type=\"flag\" /> Important</span> },\n    { path: '/list', node: <span><Icon type=\"unordered-list\" /> List</span> },\n];\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Button } from 'antd';\nimport './index.less';\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        okText: 'OK',\n        visible: false,\n        onCancel: () => {},\n        onOk: () => {},\n        okButtonProps: {},\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (!prevState.changing && !prevState.visible && nextProps.visible) {\n            return {\n                changing: true,\n            };\n        }\n        if (!prevState.changing && prevState.visible && !nextProps.visible) {\n            return {\n                changing: true,\n                visible: false,\n            };\n        }\n        return null;\n    }\n    state = {\n        visible: false,\n        changing: false,\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.visible && this.props.visible) {\n            setTimeout(() => this.setState({ visible: true, changing: false }));\n        } else if (prevProps.visible && !this.props.visible) {\n            setTimeout(() => this.setState({ changing: false }), 280);\n        }\n    }\n    render() {\n        const { okText, onOk, onCancel, okButtonProps } = this.props;\n        const { visible, changing } = this.state;\n        if (!this.props.visible && !changing) {\n            return null;\n        }\n        return createPortal(<aside className=\"ui-modal-cover\">\n            <div className=\"cover\"></div>\n            <div className=\"window\">\n                <div className=\"window-shadow\" data-is-hide={!visible}>\n                    <div className=\"body\">{this.props.children}</div>\n                    <div className=\"footer\">\n                        <div className=\"blank\"></div>\n                        <Button onClick={onCancel}>Cancel</Button>\n                        <Button type=\"primary\" onClick={onOk} {...okButtonProps}>{okText}</Button>\n                    </div>\n                </div>\n            </div>\n        </aside>, document.body);\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Input } from 'antd';\nimport { observer } from 'mobx-react';\nimport Modal from '../modal';\n\n@observer\nclass HeaderAdd extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    state = {\n        modalVisible: false,\n    }\n    handleInputChange = value => {\n        this.setState({ title: value });\n    }\n    submit = () => {\n        const { addIssue } = this.context.store;\n        const title = this.input.input.value;\n        addIssue({ title });\n        this.setState({ modalVisible: false });\n    }\n    render() {\n        const { modalVisible } = this.state;\n        return (\n            <>\n                <button onClick={() => this.setState({ modalVisible: true })}><Icon type=\"inbox\" /></button>\n                <Modal\n                    okText=\"Add\"\n                    visible={modalVisible}\n                    onCancel={() => this.setState({ modalVisible: false })}\n                    onOk={this.submit}\n                >\n                    <Input\n                        placeholder=\"Unnamed Task\"\n                        autoFocus\n                        ref={input => this.input = input}\n                        onPressEnter={this.submit}\n                    />\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default HeaderAdd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Icon } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport { menus } from '../../constants/menus';\nimport { goToIssue } from '../../helpers/remote';\nimport Add from './add';\nimport './index.less';\n\n@observer\nclass Header extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    toggleSidebar = () => {\n        const { sidebarCollapsed, setSidebarCollapse } = this.context.store;\n        setSidebarCollapse(!sidebarCollapsed);\n    }\n\n    toggleRightBar = () => {\n        const { rightBarCollapsed, setRightBarCollapse } = this.context.store;\n        setRightBarCollapse(!rightBarCollapsed);\n    }\n\n    goToGithub = () => {\n        const { selectedIssueNumber } = this.context.store;\n        if (selectedIssueNumber) {\n            goToIssue(selectedIssueNumber);\n        }\n    }\n\n    reload = () => {\n        const { loading, init } = this.context.store;\n        if (!loading) {\n            init();\n        }\n    }\n\n    render() {\n        const { sidebarCollapsed, selectedIssueNumber, loading } = this.context.store;\n        return <header className=\"app-header\">\n\t\t\t<div className=\"left-buttons\">\n                <button onClick={this.toggleSidebar}><Icon type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'} /></button>\n                <button onClick={this.reload}><Icon type=\"reload\" data-is-loading={loading > 0} /></button>\n                <Add />\n            </div>\n            <div className=\"page-title\">\n                <Switch>\n                    {\n                        menus.map(menu => <Route key={menu.path} path={menu.path} exact={menu.exact}>{menu.node}</Route>)\n                    }\n                </Switch>\n            </div>\n            <div className=\"right-buttons\">\n                <button disabled={!selectedIssueNumber} onClick={this.goToGithub}><Icon type=\"github\" /></button>\n                <button onClick={this.toggleRightBar}><Icon type=\"info-circle\" /></button>\n            </div>\n        </header>;\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport { REPO_URL } from '../helpers/remote';\nimport { menus } from '../constants/menus';\nimport './sidebar.less';\n\n@observer\nclass Sidebar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    logout() {\n        localStorage.removeItem('issue-todo-token');\n        localStorage.removeItem('issue-todo-repo');\n        window.location.href = '/';\n    }\n\n    render() {\n        const { sidebarCollapsed } = this.context.store;\n        return <div className=\"app-sidebar\" data-is-collapsed={sidebarCollapsed}>\n            <div className=\"sidebar-menu-group-title\">Perspective</div>\n            {\n                menus.map(menu => <div className=\"sidebar-menu\" key={menu.path}>\n                    <NavLink to={menu.path} exact={menu.exact}>{menu.node}</NavLink>\n                </div>)\n            }\n            <div className=\"login-info\">\n                <p className=\"logout\" onClick={this.logout}>repo:<Icon type=\"logout\" /></p>\n                <p className=\"repo-url\">{REPO_URL}</p>\n            </div>\n        </div>;\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { Empty, Tag, Input } from 'antd';\nimport moment from 'moment';\nimport { decideFontColor } from '../../helpers/util';\nimport './index.less';\n\nconst { CheckableTag } = Tag;\nconst { TextArea } = Input;\n\n@observer\nclass RightBar extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n\n    componentDidUpdate() {\n        const { selectedIssue } = this.context.store;\n        if (this.titleRef) {\n            this.titleRef.textAreaRef.value = selectedIssue.title;\n        }\n    }\n\n    handleLabelChange = (label, checked) => {\n        const { updateIssue, selectedIssue } = this.context.store;\n        let { labels } = selectedIssue;\n        if (checked) {\n            labels = [...labels, label];\n        } else {\n            labels = labels.filter(o => o.name !== label.name);\n        }\n        updateIssue(selectedIssue.number, { labels });\n    }\n\n    handleTitleChange = () => {\n        const title = this.titleRef.textAreaRef.value;\n        const { updateIssue, selectedIssue } = this.context.store;\n        updateIssue(selectedIssue.number, { title });\n    }\n\n    render() {\n        const { rightBarCollapsed, selectedIssue, displayLabels } = this.context.store;\n        const { labels: selectedLabels, title, created_at: createdAt, updated_at: updatedAt } = selectedIssue || {};\n        return <div className=\"app-rightbar\" data-is-collapsed={rightBarCollapsed}>\n            {\n                selectedIssue\n                ? <div>\n                    <div className=\"app-rightbar-form-item\">\n                        <label>Title</label>\n                        <div className=\"app-rightbar-form-item-body\">\n                            <TextArea defaultValue={title} rows={4} onChange={this.handleTitleChange} ref={ref => this.titleRef = ref} />\n                        </div>\n                    </div>\n                    <div className=\"app-rightbar-form-item\">\n                        <label>Label</label>\n                        <div className=\"app-rightbar-form-item-body\">\n                            {\n                                displayLabels.map(label => <CheckableTag\n                                    key={label.id}\n                                    checked={selectedLabels.some(o => o.name === label.name)}\n                                    style={{\n                                        '--label-font-color': decideFontColor(label.color),\n                                        '--label-back-color': `#${label.color}`,\n                                    }}\n                                    onChange={checked => this.handleLabelChange(label, checked)}\n                                >\n                                    {label.name}\n                                </CheckableTag>)\n                            }\n                        </div>\n                    </div>\n                    <div className=\"app-rightbar-form-item\">\n                        <label>Date</label>\n                        <div className=\"app-rightbar-form-item-body\">\n                            Created At: {moment(createdAt).format('YYYY/MM/DD HH:mm')}\n                        </div>\n                        <div className=\"app-rightbar-form-item-body\">\n                            Updated At: {moment(updatedAt).format('YYYY/MM/DD HH:mm')}\n                        </div>\n                    </div>\n                </div>\n                : <Empty description=\"NO SELECTION\" />\n            }\n        </div>;\n    }\n}\n\nexport default RightBar;\n","import React, { Component } from 'react';\nimport { Input, Button, Card } from 'antd';\nimport './login.less';\n\nexport default class Login extends Component {\n    state = {\n        token: '',\n        repo: '',\n    }\n    onTokenChange = e => this.setState({ token: e.target.value });\n    onRepoChange = e => this.setState({ repo: e.target.value });\n    login = async () => {\n        const { token, repo } = this.state;\n        localStorage.setItem('issue-todo-token', token);\n        localStorage.setItem('issue-todo-repo', /^\\//.test(repo) ? repo : `/${repo}`);\n        window.location.href = '/';\n    }\n    render() {\n        const { token, repo } = this.state;\n        return <div className=\"page-login\">\n            <div className=\"main\">\n                <Card title=\"Login\">\n                    <div className=\"form\">\n                        <div className=\"form-row\">\n                            <Input onChange={this.onTokenChange} value={token} placeholder=\"GitHub API token\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <Input onChange={this.onRepoChange} value={repo} placeholder=\"Repo address, e.g: wangsijie/todo\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <Button disabled={!token} onClick={this.login} type=\"primary\">GO</Button>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport { observer } from 'mobx-react';\nimport { decideFontColor } from '../../helpers/util';\nimport './issue.less';\n\n@observer\nclass Issue extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    handleCheckBoxClick = () => {\n        const { issue } = this.props;\n        if (issue.$closed) {\n            return;\n        }\n        const { closeIssue } = this.context.store;\n        closeIssue(issue.number);\n    }\n    toggleFlag = () => {\n        const { issue } = this.props;\n        const { setIssueFlag } = this.context.store;\n        setIssueFlag(issue.number, !issue.$isImportant);\n    }\n    select = () => {\n        const { issue } = this.props;\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(issue.number);\n    }\n    render() {\n        const { issue } = this.props;\n        return (\n            <div className=\"ui-issue\" onClick={this.select} data-is-selected={issue.$selected}>\n                <div className=\"check-box\" onClick={this.handleCheckBoxClick} data-is-important={issue.$isImportant}>\n                    {issue.$closed && <div className=\"closed\" />}\n                </div>\n                <div className=\"main\">\n                    <div className=\"title\" data-is-closed={issue.$closed}>{issue.title}</div>\n                    <div className=\"labels\">\n                        {\n                            issue.$displayLabels.map(label => <div\n                                className=\"label\"\n                                key={label.id}\n                                style={{\n                                    backgroundColor: `#${label.color}`,\n                                    color: decideFontColor(label.color),\n                                }}\n                            >\n                                {label.name}\n                            </div>)\n                        }\n                    </div>\n                    <div className=\"flag\" onClick={this.toggleFlag}>\n                        <Icon type=\"flag\" theme={issue.$isImportant ? 'twoTone' : null} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport Issue from './issue';\nimport './index.less';\n\n@observer\nclass IssueList extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    componentWillUnmount() {\n        this.clearSelection();\n    }\n    clearSelection = () => {\n        const { setSelectedIssueNumber } = this.context.store;\n        setSelectedIssueNumber(0);\n    }\n    render() {\n        const { issues } = this.props;\n        return <div className=\"ui-issue-list\">\n            <div className=\"ui-issue-list-body\">\n                {\n                    issues.map(issue => <Issue key={issue.number} issue={issue}></Issue>)\n                }\n            </div>\n            <div className=\"ui-issue-list-blank\" onClick={this.clearSelection}></div>\n        </div>\n    }\n}\n\nexport default IssueList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass InboxPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { inboxIssues } = this.context.store;\n        return <div><IssueList issues={inboxIssues} /></div>;\n    }\n}\n\nexport default InboxPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass NextActionPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { nextActionIssues } = this.context.store;\n        return <div>\n            <IssueList issues={nextActionIssues} />\n        </div>;\n    }\n}\n\nexport default NextActionPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ListPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { listIssues } = this.context.store;\n        return <div><IssueList issues={listIssues} /></div>;\n    }\n}\n\nexport default ListPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport IssueList from '../../components/issue-list';\n\n@observer\nclass ImportantPage extends Component {\n    static contextTypes = {\n        store: PropTypes.object,\n    };\n    render() {\n        const { importantIssues } = this.context.store;\n        return <div><IssueList issues={importantIssues} /></div>;\n    }\n}\n\nexport default ImportantPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { observer } from 'mobx-react';\nimport { isLogin } from './helpers/remote';\nimport Header from './components/header';\nimport Sidebar from './components/sidebar';\nimport RightBar from './components/right-bar';\nimport Login from './pages/login';\nimport Inbox from './pages/inbox';\nimport NextAction from './pages/next-action';\nimport List from './pages/list';\nimport Important from './pages/important';\nimport './app.less';\n\n@observer\nclass App extends React.Component {\n\tstatic contextTypes = {\n        store: PropTypes.object,\n    };\n\tcomponentDidMount() {\n\t\tconst { init } = this.context.store;\n\t\tif (isLogin()) {\n\t\t\tinit();\n\t\t}\n\t}\n\trender() {\n\t\tif (!isLogin()) {\n\t\t\treturn <Login />\n\t\t}\n\t\tconst { initState } = this.context.store;\n\t\tif (initState === 'pending') {\n\t\t\treturn (\n\t\t\t\t<div className=\"app pending\">\n\t\t\t\t\t<Spin size=\"large\" /> Initializing...\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Inbox} />\n\t\t\t\t\t\t\t<Route path=\"/next-action\" component={NextAction} />\n\t\t\t\t\t\t\t<Route path=\"/important\" component={Important} />\n\t\t\t\t\t\t\t<Route path=\"/list\" component={List} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<RightBar />\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport Provider from './provider';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports.decideFontColor = background => {\n    const red = parseInt(background.substr(0, 2), 16);\n    const green = parseInt(background.substr(2, 2), 16);\n    const blue = parseInt(background.substr(4, 2), 16);\n    if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {\n        return '#000000';\n    }\n    return '#ffffff';\n};\n"],"sourceRoot":""}